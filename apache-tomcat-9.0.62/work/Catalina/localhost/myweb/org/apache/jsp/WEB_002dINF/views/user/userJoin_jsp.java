/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.62
 * Generated at: 2022-07-18 12:52:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.user;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class userJoin_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("/WEB-INF/views/user/../includes/header.jsp", Long.valueOf(1657900259894L));
    _jspx_dependants.put("jar:file:/C:/Users/User/Desktop/java_web_RKP/apache-tomcat-9.0.62/wtpwebapps/Pr_Spring/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1648080476018L));
    _jspx_dependants.put("/WEB-INF/views/user/../includes/footer.jsp", Long.valueOf(1657900259894L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fchoose;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fotherwise;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fchoose = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fotherwise = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fchoose.release();
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fotherwise.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("	\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("\r\n");
      out.write("<meta http-equiv=\"content-type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("\r\n");
      out.write("<title>BBS Test</title>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!--회원가입 폼만 적용되는 css-->\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write(".table-striped>tbody>tr {\r\n");
      out.write("	background-color: #f9f9f9\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".join-form {\r\n");
      out.write("	margin: 0 auto;\r\n");
      out.write("	padding: 20px;\r\n");
      out.write("	width: 50%;\r\n");
      out.write("	float: none;\r\n");
      out.write("	background-color: white;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".form-group>.sel {\r\n");
      out.write("	width: 120px;\r\n");
      out.write("	display: inline-block;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"content-type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/bootstrap.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/custom.css\">\r\n");
      out.write("<title>BBS Test</title>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!--메인만 적용되는 css영역-->\r\n");
      out.write("<style>\r\n");
      out.write("body {\r\n");
      out.write("	background-image: /Pr_Spring/images/main.jpg;\r\n");
      out.write("	background-repeat: no-repeat;\r\n");
      out.write("	background-size: cover\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("	<nav class=\"navbar navbar-default\" id=\"nav\">\r\n");
      out.write("		<div class=\"navbar-header\">\r\n");
      out.write("			<button type=\"button\" class=\"navbar-toggle collapsed\"\r\n");
      out.write("				data-toggle=\"collapse\" data-target=\"#bs-example-navbar-collapse-1\"\r\n");
      out.write("				aria-expanded=\"false\">\r\n");
      out.write("				<span class=\"icon-bar\"></span> <span class=\"icon-bar\"></span> <span\r\n");
      out.write("					class=\"icon-bar\"></span>\r\n");
      out.write("			</button>\r\n");
      out.write("			<a class=\"navbar-brand\" href=\"");
      if (_jspx_meth_c_005furl_005f0(_jspx_page_context))
        return;
      out.write("\">MIN and PARK</a>\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("		<div class=\"collapse navbar-collapse\"\r\n");
      out.write("			id=\"bs-example-navbar-collapse-1\">\r\n");
      out.write("			<ul class=\"nav navbar-nav\">\r\n");
      out.write("				<li class=\"active\"><a href=\"");
      if (_jspx_meth_c_005furl_005f1(_jspx_page_context))
        return;
      out.write("\" style=\"margin-right: 10px;\">메인</a></li>\r\n");
      out.write("				<li><a href=\"");
      if (_jspx_meth_c_005furl_005f2(_jspx_page_context))
        return;
      out.write("\">게시판</a></li>\r\n");
      out.write("				<!-- 게시판 이동 경로 설정 -->\r\n");
      out.write("			</ul>\r\n");
      out.write("\r\n");
      out.write("			<ul class=\"nav navbar-nav navbar-right\">\r\n");
      out.write("				<li class=\"dropdown\"><a href=\"#\" class=\"dropdown-toggle\"\r\n");
      out.write("					data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\"\r\n");
      out.write("					aria-expanded=\"false\">접속하기<span class=\"caret\"></span></a>\r\n");
      out.write("					<ul class=\"dropdown-menu\">\r\n");
      out.write("					");
      if (_jspx_meth_c_005fchoose_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("					</ul></li>\r\n");
      out.write("			</ul>\r\n");
      out.write("\r\n");
      out.write("		</div>\r\n");
      out.write("	</nav>\r\n");
      out.write("</body>");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<section>\r\n");
      out.write("		<div class=\"container\">\r\n");
      out.write("			<div class=\"row\">\r\n");
      out.write("				<div class=\"col-lg-6 col-md-9 col-sm-12 join-form\">\r\n");
      out.write("					<h2>\r\n");
      out.write("						회원가입<small>(가운데정렬)</small>\r\n");
      out.write("					</h2>\r\n");
      out.write("\r\n");
      out.write("					<form action=\"");
      if (_jspx_meth_c_005furl_005f7(_jspx_page_context))
        return;
      out.write("\" method=\"post\" id=\"joinForm\">\r\n");
      out.write("						<div class=\"form-group\">\r\n");
      out.write("							<label for=\"id\">아이디</label> <input type=\"text\"\r\n");
      out.write("								class=\"form-control\" id=\"userId\" name=\"userId\" placeholder=\"아이디를 (영문포함 4~12자 이상)\">\r\n");
      out.write("							<div class=\"input-group-addon\">\r\n");
      out.write("								<button id=\"idCheckBtn\" type=\"button\" class=\"btn btn-primary\">아이디중복체크</button>\r\n");
      out.write("							</div>\r\n");
      out.write("						</div>\r\n");
      out.write("						\r\n");
      out.write("						<span id=\"msgId\">*필수 사항입니다.</span>\r\n");
      out.write("						\r\n");
      out.write("						<div class=\"form-group\">\r\n");
      out.write("							<label for=\"password\">비밀번호</label> <input type=\"password\"\r\n");
      out.write("								class=\"form-control\" id=\"userPw\" name =\"userPw\"\r\n");
      out.write("								placeholder=\"비밀번호 (영 대/소문자, 숫자, 특수문자 3종류 이상 조합 8자 이상)\">\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"form-group\">\r\n");
      out.write("							<label for=\"password-confrim\">비밀번호 확인</label> <input\r\n");
      out.write("								type=\"password\" class=\"form-control\" id=\"password-confirm\"\r\n");
      out.write("								placeholder=\"비밀번호를 확인해주세요.\">\r\n");
      out.write("								<span id=\"msgPw-c\"></span>\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"form-group\">\r\n");
      out.write("							<label for=\"name\">이름</label> <input type=\"text\"\r\n");
      out.write("								class=\"form-control\" id=\"userName\" name=\"userName\" placeholder=\"이름을 입력하세요.\">\r\n");
      out.write("						</div>\r\n");
      out.write("						<!--input2탭의 input-addon을 가져온다 -->\r\n");
      out.write("						<div class=\"form-group\">\r\n");
      out.write("							<label for=\"hp\">휴대폰번호</label><br> <input\r\n");
      out.write("								class=\"form-control sel\" placeholder=\"010\" id=\"userTel1\" name=\"userTel1\"> - <input\r\n");
      out.write("								class=\"form-control sel\" placeholder=\"xxxx\" id=\"userTel2\" name=\"userTel2\"> - <input\r\n");
      out.write("								class=\"form-control sel\" placeholder=\"xxxx\" id = \"userTel3\" name=\"userTel3\">\r\n");
      out.write("\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"form-group email-form\">\r\n");
      out.write("							<div class=\"form-group\">\r\n");
      out.write("								<label for=\"hp\">이메일</label><br> <input\r\n");
      out.write("									class=\"form-control sel\" id =\"userEmail1\" name=\"userEmail1\"> <select\r\n");
      out.write("									class=\"form-control sel\" id=\"userEmail2\" name=\"userEmail2\">\r\n");
      out.write("									<option>@naver.com</option>\r\n");
      out.write("									<option>@gmail.com</option>\r\n");
      out.write("									<option>@daum.net</option>\r\n");
      out.write("								</select>\r\n");
      out.write("								\r\n");
      out.write("								<div class=\"input-group-addon\">\r\n");
      out.write("									<button type=\"button\" id=\"mail-check-btn\"\r\n");
      out.write("										class=\"btn btn-primary\">이메일 인증</button>\r\n");
      out.write("								</div>\r\n");
      out.write("							</div>\r\n");
      out.write("							\r\n");
      out.write("							<div class=\"mail-check-box\">\r\n");
      out.write("								<input type=\"text\" class=\"form-control mail-check-input\"\r\n");
      out.write("									placeholder=\"인증번호 6자리를 입력하세요.\" maxlength=\"6\" disabled=\"disabled\">\r\n");
      out.write("								<span id=\"mail-check-warn\"></span>\r\n");
      out.write("								<!-- 인증번호 맞는지 틀린지 유무 표시하는 곳 -->\r\n");
      out.write("							</div>\r\n");
      out.write("						</div>\r\n");
      out.write("\r\n");
      out.write("						<div class=\"form-group\">\r\n");
      out.write("							<label for=\"addr-num\">주소</label>\r\n");
      out.write("							<div class=\"input-group\">\r\n");
      out.write("								<input type=\"text\" class=\"form-control\" id=\"userAddr1\" name=\"userAddr1\"\r\n");
      out.write("									placeholder=\"우편번호\" readonly>\r\n");
      out.write("								<div class=\"input-group-addon\">\r\n");
      out.write("									<button type=\"button\" class=\"btn btn-primary\"\r\n");
      out.write("										onclick=\"searchAddress()\">주소찾기</button>\r\n");
      out.write("										<!-- 주소찾기 버튼이 클릭이 되면 goPopup()함수 실행  -->\r\n");
      out.write("										<!-- 주소찾기 버튼이 클릭이 되면 searchAddress()함수 실행 -->\r\n");
      out.write("								</div>\r\n");
      out.write("							</div>\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"form-group\">\r\n");
      out.write("							<input type=\"text\" class=\"form-control\" id=\"userAddr2\" name =\"userAddr2\"\r\n");
      out.write("								placeholder=\"기본주소\">\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"form-group\">\r\n");
      out.write("							<input type=\"text\" class=\"form-control\" id=\"userAddr3\" name =\"userAddr3\"\r\n");
      out.write("								placeholder=\"상세주소\">\r\n");
      out.write("						</div>\r\n");
      out.write("						\r\n");
      out.write("						<div class=\"form-group\">\r\n");
      out.write("							<button type=\"button\" id=\"registBtn\" class=\"btn btn-lg btn-success btn-block\">회원가입</button>\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"form-group\">\r\n");
      out.write("							<button type=\"button\" id = \"loginBtn\" class=\"btn btn-lg btn-info btn-block\">로그인</button>\r\n");
      out.write("						</div>\r\n");
      out.write("					</form>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	</section>\r\n");
      out.write("	");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<!--Footer-->\r\n");
      out.write("		<footer>\r\n");
      out.write("		<div class=\"copyright py-4 text-center text-white\">\r\n");
      out.write("			<div class=\"container bounceIn animate\">\r\n");
      out.write("				<small>Copyright<!-- &copy; --> 2019.<a href=\"\"> Min and\r\n");
      out.write("						Park</a></small>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</footer>\r\n");
      out.write("\r\n");
      out.write("	<script src=\"https://code.jquery.com/jquery-3.1.1.min.js\"></script>\r\n");
      out.write("	<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/js/bootstrap.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	<script src=\"//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js\"></script>\r\n");
      out.write("\r\n");
      out.write("	<script>\r\n");
      out.write("		var id = document.getElementById(\"userId\");\r\n");
      out.write("		// 아이디가 들어있는 요소 찾기 \r\n");
      out.write("		console.log(id);\r\n");
      out.write("		\r\n");
      out.write("		// 아이디 형식 검사 \r\n");
      out.write("		id.onkeyup = function(){\r\n");
      out.write("			var regex = /^[A-Za-z0-9+]{4,12}$/;\r\n");
      out.write("			if (regex.test($('#userId').val())){\r\n");
      out.write("				document.getElementById(\"userId\").style.borderColor=\"green\";\r\n");
      out.write("				document.getElementById(\"msgId\").innerHTML = \"아이디 중복체크는 필수입니다.\";\r\n");
      out.write("				$('#userId').attr('readonly', true);\r\n");
      out.write("			}\r\n");
      out.write("			else{\r\n");
      out.write("				document.getElementById(\"userId\").style.borderColor = \"red\";\r\n");
      out.write("				document.getElementById(\"msgId\").innerHTML = \"사용불가능한 아이디형식입니다.\";\r\n");
      out.write("			}\r\n");
      out.write("		} \r\n");
      out.write("		// 아이디 형식 검사 끄읏 ~ \r\n");
      out.write("		\r\n");
      out.write("		// 비밀번호 형식 검사 \r\n");
      out.write("		var pw = document.getElementById(\"userPw\");\r\n");
      out.write("		console.log(pw);\r\n");
      out.write("\r\n");
      out.write("		pw.onkeyup = function(){\r\n");
      out.write("			var regex = /^[A-Za-z0-9+]{8,16}$/;\r\n");
      out.write("			\r\n");
      out.write("			if (regex.test($('#userPw').val())){\r\n");
      out.write("				document.getElementById(\"userPw\").style.borderColor = \"green\";\r\n");
      out.write("			}\r\n");
      out.write("			else {\r\n");
      out.write("				document.getElementById(\"userPw\").style.borderColor=\"red\";\r\n");
      out.write("			}\r\n");
      out.write("		}\r\n");
      out.write("		// 비밀번호 형식 검사 끄읏 ~ \r\n");
      out.write("		\r\n");
      out.write("		// 비밀번호가 같은지 검사 \r\n");
      out.write("		var chPw = document.getElementById(\"password-confirm\");\r\n");
      out.write("		chPw.onkeyup = function(){\r\n");
      out.write("			var regex = /^[A-Za-z0-9+]{8, 16}$/;\r\n");
      out.write("			console.log(chPw);\r\n");
      out.write("\r\n");
      out.write("			\r\n");
      out.write("			if ($('#password-confirm').val() == $('#userPw').val()){\r\n");
      out.write("				document.getElementById(\"password-confirm\").style.borderColor=\"green\";\r\n");
      out.write("				document.getElementById(\"msgPw-c\").innerHTML=\"비밀번호가 동일합니다.\";\r\n");
      out.write("			}\r\n");
      out.write("			else{\r\n");
      out.write("				document.getElementById(\"password-confirm\").style.borderColor=\"red\";\r\n");
      out.write("				document.getElementById(\"msgPw-c\").innerHTML=\"비밀번호가 동일하지 않습니다.\";\r\n");
      out.write("			}\r\n");
      out.write("		}\r\n");
      out.write("		// 비밀번호가 같은지 검사 끄읏 \r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		// 아이디 중복 검사 \r\n");
      out.write("		$(function(){\r\n");
      out.write("			\r\n");
      out.write("			$('#idCheckBtn').click(function()  {\r\n");
      out.write("				const id = $('#userId').val();\r\n");
      out.write("				\r\n");
      out.write("				if (id === ''){\r\n");
      out.write("					alert('아이디 값이 비어있습니다.');\r\n");
      out.write("					return\r\n");
      out.write("				}\r\n");
      out.write("				\r\n");
      out.write("				$.ajax({\r\n");
      out.write("					type:'post',\r\n");
      out.write("					url : '");
      if (_jspx_meth_c_005furl_005f8(_jspx_page_context))
        return;
      out.write("',\r\n");
      out.write("					data : id,\r\n");
      out.write("					dataType :  'text',\r\n");
      out.write("					contentType :'application/json',\r\n");
      out.write("					\r\n");
      out.write("					success : function(result){\r\n");
      out.write("						if (result === 'Fail'){\r\n");
      out.write("							alert('중복된 아이디입니다. 다시 입력해주세요.');\r\n");
      out.write("							$('#userId').val('');\r\n");
      out.write("							$('#userId').focus();\r\n");
      out.write("						}\r\n");
      out.write("						else {\r\n");
      out.write("							alert('사용가능한 아이디입니다.');\r\n");
      out.write("							document.getElementById('msgId').innerHTML = \"사용가능한 아이디입니다.\";\r\n");
      out.write("						}\r\n");
      out.write("					},\r\n");
      out.write("					\r\n");
      out.write("					error : function(){\r\n");
      out.write("						alert('오류입니다. 관리자에게 문의하세요.');\r\n");
      out.write("					}\r\n");
      out.write("				});\r\n");
      out.write("				// end ajax \r\n");
      out.write("				\r\n");
      out.write("			});\r\n");
      out.write("			// 아이디 중복 체크 로직 끄읏 ~ \r\n");
      out.write("			\r\n");
      out.write("			// 이메일 인증 로직 \r\n");
      out.write("			let code = '';\r\n");
      out.write("			$('#mail-check-btn').click(function(){\r\n");
      out.write("				const email = $('#userEmail1').val() + $('#userEmail2').val(); \r\n");
      out.write("				// 이메일 완성 \r\n");
      out.write("				\r\n");
      out.write("				console.log('완성된 이메일 보기' + email)\r\n");
      out.write("				$.ajax({\r\n");
      out.write("					type:'get',\r\n");
      out.write("					url : '");
      if (_jspx_meth_c_005furl_005f9(_jspx_page_context))
        return;
      out.write("' + email,\r\n");
      out.write("					// 요청과 함께 데이터도 함께 보냄 \r\n");
      out.write("					\r\n");
      out.write("					success : function(result){\r\n");
      out.write("						console.log('컨트롤러에서 받은 인증번호 : ' + result);\r\n");
      out.write("						$('.mail-check-input').attr(\"disabled\", false);\r\n");
      out.write("						// 비활성화 된 인증번호 창 활성화 \r\n");
      out.write("						// attr함수를 활용해서 속성 변경 \r\n");
      out.write("						\r\n");
      out.write("						code = result;\r\n");
      out.write("						alert('인증번호가 전송되었습니다. 확인 후 입력란에 인증번호를 작성해주세요.');\r\n");
      out.write("					},\r\n");
      out.write("					\r\n");
      out.write("					error : function(){\r\n");
      out.write("						alert('오류입니다. 관리자에게 문의하세요.');\r\n");
      out.write("					}\r\n");
      out.write("					\r\n");
      out.write("				}); \r\n");
      out.write("				// end ajax \r\n");
      out.write("				\r\n");
      out.write("				// mail\r\n");
      out.write("				$('.mail-check-input').blur(function(){\r\n");
      out.write("					// 해당 창을 벗어나게 된다면 함수 발동 \r\n");
      out.write("					\r\n");
      out.write("					const inputCode = $(this).val();\r\n");
      out.write("					// 사용자가 입력한 인증코드 \r\n");
      out.write("					const msg = $('#mail-check-warn');\r\n");
      out.write("					\r\n");
      out.write("					if (inputCode == code){\r\n");
      out.write("						// 사용자가 입력한 코드와 진짜 인증 코드가 같다면 \r\n");
      out.write("						msg.html('인증번호가 일치합니다.');\r\n");
      out.write("						msg.css('color', 'green');\r\n");
      out.write("						\r\n");
      out.write("						$('#mail-check-btn').attr('disabled',  true);\r\n");
      out.write("						// 이메일 인증버튼을 다시 누르지 못하도록 비활성화 \r\n");
      out.write("						\r\n");
      out.write("						$('#userEmail1').attr('readonly', true);\r\n");
      out.write("						\r\n");
      out.write("						$('#userEmail2').attr('onFocus', 'this.initialSelect = this.selectedIndex');\r\n");
      out.write("						$('#userEmail2').attr('onChange', 'this.selectedIndex = this.initialSelect');\r\n");
      out.write("						// 위의 2개 코드를 작성해야 select 태그에 지정된 값이 움직이지 못하게 막아줌 \r\n");
      out.write("						\r\n");
      out.write("						$(this).css('display', 'none');\r\n");
      out.write("						\r\n");
      out.write("					}\r\n");
      out.write("					else{\r\n");
      out.write("						msg.html('인증번호가 일치하지 않습니다.');\r\n");
      out.write("						msg.css('color', 'red');\r\n");
      out.write("					}\r\n");
      out.write("				});\r\n");
      out.write("				// blur 이벤트 끄읏 ~\r\n");
      out.write("				\r\n");
      out.write("			});\r\n");
      out.write("			// 이메일 인증 로직 끄읏 ~\r\n");
      out.write("			\r\n");
      out.write("			$('#registBtn').click(function(){\r\n");
      out.write("				\r\n");
      out.write("				if (!$('#userId').attr('readonly')){\r\n");
      out.write("					// userId의 속성인 readonly가 true가 아니라면 중복체크를 하지 않았다는 \r\n");
      out.write("					alert('아이디 중복체크는 필수입니다.');\r\n");
      out.write("					return\r\n");
      out.write("				}\r\n");
      out.write("				else if($('#userPw').val === '' || $('#userPw').val() !== $('#password-confirm').val()){\r\n");
      out.write("					alert('비밀번호 부분이 비어있거나 일치하지 않습니다.');\r\n");
      out.write("					$('#userPw').focus();\r\n");
      out.write("					return \r\n");
      out.write("				}\r\n");
      out.write("				else if ($('#userName').val === ''){\r\n");
      out.write("					alert('이름을 작성해주세요 ');\r\n");
      out.write("					return\r\n");
      out.write("				}\r\n");
      out.write("				else {\r\n");
      out.write("					$('#joinForm').submit();\r\n");
      out.write("				}\r\n");
      out.write("				\r\n");
      out.write("				\r\n");
      out.write("			});\r\n");
      out.write("		});\r\n");
      out.write("		// end jQuery \r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		// 다음 주소 api 사용 \r\n");
      out.write("		function searchAddress(){\r\n");
      out.write("			new daum.Postcode({\r\n");
      out.write("				oncomplete: function(data){\r\n");
      out.write("					var addr = '';\r\n");
      out.write("					\r\n");
      out.write("					var extraAddr = '';\r\n");
      out.write("					\r\n");
      out.write("	                //사용자가 선택한 주소 타입에 따라 해당 주소 값을 가져온다.\r\n");
      out.write("	                if (data.userSelectedType === 'R') { // 사용자가 도로명 주소를 선택했을 경우\r\n");
      out.write("	                    addr = data.roadAddress;\r\n");
      out.write("	                } else { // 사용자가 지번 주소를 선택했을 경우(J)\r\n");
      out.write("	                    addr = data.jibunAddress;\r\n");
      out.write("	                }\r\n");
      out.write("	                \r\n");
      out.write("	                document.getElementById('userAddr1').value = data.zonecode;\r\n");
      out.write("	                document.getElementById('userAddr2').value = addr;\r\n");
      out.write("	                document.getElementById('userAddr3').focus(); \r\n");
      out.write("				}\r\n");
      out.write("			}).open();\r\n");
      out.write("			\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	</script>\r\n");
      out.write("	\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005furl_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f0 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f0_reused = false;
    try {
      _jspx_th_c_005furl_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f0.setParent(null);
      // /WEB-INF/views/user/../includes/header.jsp(36,33) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f0.setValue("/");
      int _jspx_eval_c_005furl_005f0 = _jspx_th_c_005furl_005f0.doStartTag();
      if (_jspx_th_c_005furl_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f0);
      _jspx_th_c_005furl_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f0, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f1 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f1_reused = false;
    try {
      _jspx_th_c_005furl_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f1.setParent(null);
      // /WEB-INF/views/user/../includes/header.jsp(42,32) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f1.setValue("/");
      int _jspx_eval_c_005furl_005f1 = _jspx_th_c_005furl_005f1.doStartTag();
      if (_jspx_th_c_005furl_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f1);
      _jspx_th_c_005furl_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f1, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f2 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f2_reused = false;
    try {
      _jspx_th_c_005furl_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f2.setParent(null);
      // /WEB-INF/views/user/../includes/header.jsp(43,17) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f2.setValue("/board/boardList");
      int _jspx_eval_c_005furl_005f2 = _jspx_th_c_005furl_005f2.doStartTag();
      if (_jspx_th_c_005furl_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f2);
      _jspx_th_c_005furl_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f2, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fchoose_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f0 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    boolean _jspx_th_c_005fchoose_005f0_reused = false;
    try {
      _jspx_th_c_005fchoose_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fchoose_005f0.setParent(null);
      int _jspx_eval_c_005fchoose_005f0 = _jspx_th_c_005fchoose_005f0.doStartTag();
      if (_jspx_eval_c_005fchoose_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("						");
          if (_jspx_meth_c_005fwhen_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("						\r\n");
          out.write("						");
          if (_jspx_meth_c_005fotherwise_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("					");
          int evalDoAfterBody = _jspx_th_c_005fchoose_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fchoose_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f0);
      _jspx_th_c_005fchoose_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fchoose_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f0 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f0_reused = false;
    try {
      _jspx_th_c_005fwhen_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      // /WEB-INF/views/user/../includes/header.jsp(53,6) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${login == null }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f0 = _jspx_th_c_005fwhen_005f0.doStartTag();
      if (_jspx_eval_c_005fwhen_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("							<li><a href=\"");
          if (_jspx_meth_c_005furl_005f3(_jspx_th_c_005fwhen_005f0, _jspx_page_context))
            return true;
          out.write("\">로그인</a></li>\r\n");
          out.write("							<li><a href=\"");
          if (_jspx_meth_c_005furl_005f4(_jspx_th_c_005fwhen_005f0, _jspx_page_context))
            return true;
          out.write("\">회원가입</a></li>\r\n");
          out.write("						");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f0);
      _jspx_th_c_005fwhen_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f3(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fwhen_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f3 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f3_reused = false;
    try {
      _jspx_th_c_005furl_005f3.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f3.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fwhen_005f0);
      // /WEB-INF/views/user/../includes/header.jsp(54,20) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f3.setValue("/user/userLogin");
      int _jspx_eval_c_005furl_005f3 = _jspx_th_c_005furl_005f3.doStartTag();
      if (_jspx_th_c_005furl_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f3);
      _jspx_th_c_005furl_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f3, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f3_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f4(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fwhen_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f4 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f4_reused = false;
    try {
      _jspx_th_c_005furl_005f4.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f4.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fwhen_005f0);
      // /WEB-INF/views/user/../includes/header.jsp(55,20) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f4.setValue("/user/userJoin");
      int _jspx_eval_c_005furl_005f4 = _jspx_th_c_005furl_005f4.doStartTag();
      if (_jspx_th_c_005furl_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f4);
      _jspx_th_c_005furl_005f4_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f4, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f4_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fotherwise_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:otherwise
    org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f0 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
    boolean _jspx_th_c_005fotherwise_005f0_reused = false;
    try {
      _jspx_th_c_005fotherwise_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fotherwise_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      int _jspx_eval_c_005fotherwise_005f0 = _jspx_th_c_005fotherwise_005f0.doStartTag();
      if (_jspx_eval_c_005fotherwise_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("							<li><a href=\"");
          if (_jspx_meth_c_005furl_005f5(_jspx_th_c_005fotherwise_005f0, _jspx_page_context))
            return true;
          out.write("\">마이페이지</a></li>\r\n");
          out.write("							<li><a href=\"");
          if (_jspx_meth_c_005furl_005f6(_jspx_th_c_005fotherwise_005f0, _jspx_page_context))
            return true;
          out.write("\">로그아웃</a></li>\r\n");
          out.write("						");
          int evalDoAfterBody = _jspx_th_c_005fotherwise_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fotherwise_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f0);
      _jspx_th_c_005fotherwise_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fotherwise_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fotherwise_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f5(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fotherwise_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f5 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f5_reused = false;
    try {
      _jspx_th_c_005furl_005f5.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f5.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fotherwise_005f0);
      // /WEB-INF/views/user/../includes/header.jsp(59,20) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f5.setValue("/user/userMypageInfo");
      int _jspx_eval_c_005furl_005f5 = _jspx_th_c_005furl_005f5.doStartTag();
      if (_jspx_th_c_005furl_005f5.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f5);
      _jspx_th_c_005furl_005f5_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f5, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f5_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f6(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fotherwise_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f6 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f6_reused = false;
    try {
      _jspx_th_c_005furl_005f6.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f6.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fotherwise_005f0);
      // /WEB-INF/views/user/../includes/header.jsp(60,20) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f6.setValue("/user/userLogout");
      int _jspx_eval_c_005furl_005f6 = _jspx_th_c_005furl_005f6.doStartTag();
      if (_jspx_th_c_005furl_005f6.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f6);
      _jspx_th_c_005furl_005f6_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f6, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f6_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f7(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f7 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f7_reused = false;
    try {
      _jspx_th_c_005furl_005f7.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f7.setParent(null);
      // /WEB-INF/views/user/userJoin.jsp(45,19) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f7.setValue("/user/userJoin");
      int _jspx_eval_c_005furl_005f7 = _jspx_th_c_005furl_005f7.doStartTag();
      if (_jspx_th_c_005furl_005f7.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f7);
      _jspx_th_c_005furl_005f7_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f7, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f7_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f8(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f8 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f8_reused = false;
    try {
      _jspx_th_c_005furl_005f8.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f8.setParent(null);
      // /WEB-INF/views/user/userJoin.jsp(210,12) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f8.setValue("/user/userCheckId");
      int _jspx_eval_c_005furl_005f8 = _jspx_th_c_005furl_005f8.doStartTag();
      if (_jspx_th_c_005furl_005f8.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f8);
      _jspx_th_c_005furl_005f8_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f8, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f8_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f9(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f9 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f9_reused = false;
    try {
      _jspx_th_c_005furl_005f9.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f9.setParent(null);
      // /WEB-INF/views/user/userJoin.jsp(245,12) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f9.setValue("/user/CheckMail?email=");
      int _jspx_eval_c_005furl_005f9 = _jspx_th_c_005furl_005f9.doStartTag();
      if (_jspx_th_c_005furl_005f9.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f9);
      _jspx_th_c_005furl_005f9_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f9, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f9_reused);
    }
    return false;
  }
}
