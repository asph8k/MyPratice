/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.62
 * Generated at: 2022-06-28 08:49:13 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.snsBoard;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class snsList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("/WEB-INF/views/snsBoard/../include/footer.jsp", Long.valueOf(1655450702000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1648080476018L));
    _jspx_dependants.put("/WEB-INF/views/snsBoard/../include/header.jsp", Long.valueOf(1656049909068L));
    _jspx_dependants.put("jar:file:/C:/Users/User/Desktop/java_web_RKP/apache-tomcat-9.0.62/wtpwebapps/MyWeb/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fchoose;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fotherwise;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fchoose = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fotherwise = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fchoose.release();
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fotherwise.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>   \r\n");
      out.write("   \r\n");
      out.write("   <style type=\"text/css\">\r\n");
      out.write("   section {\r\n");
      out.write("      margin-top: 70px;\r\n");
      out.write("   }\r\n");
      out.write("   \r\n");
      out.write("   /*부트스트랩 li의 drophover클래스 호버시에 드롭다운 적용코드*/\r\n");
      out.write("   ul.nav li.drophover:hover>ul.dropdown-menu {\r\n");
      out.write("      display: block;\r\n");
      out.write("      margin: 0;\r\n");
      out.write("   }\r\n");
      out.write("   \r\n");
      out.write("   .aside-inner {\r\n");
      out.write("      position: fixed;\r\n");
      out.write("      top: 70px;\r\n");
      out.write("      width: 180px;\r\n");
      out.write("   }\r\n");
      out.write("   \r\n");
      out.write("   .section-inner {\r\n");
      out.write("      border-right: 1px solid #ddd;\r\n");
      out.write("      border-left: 1px solid #ddd;\r\n");
      out.write("      background-color: white;\r\n");
      out.write("   }\r\n");
      out.write("   \r\n");
      out.write("   .section-inner p, .aside-inner p {\r\n");
      out.write("      margin: 0;\r\n");
      out.write("   }\r\n");
      out.write("   \r\n");
      out.write("   .title-inner {\r\n");
      out.write("      position: relative;\r\n");
      out.write("      padding: 15px 0;\r\n");
      out.write("   }\r\n");
      out.write("   \r\n");
      out.write("   .title-inner .profile {\r\n");
      out.write("      position: absolute; /*부모기준으로 위치지정 릴레이티브*/\r\n");
      out.write("      top: 15px;\r\n");
      out.write("      left: 0;\r\n");
      out.write("   }\r\n");
      out.write("   \r\n");
      out.write("   .title-inner .title {\r\n");
      out.write("      padding-left: 50px;\r\n");
      out.write("   }\r\n");
      out.write("   /*내용*/\r\n");
      out.write("   .content-inner {\r\n");
      out.write("      padding: 10px 0;\r\n");
      out.write("   }\r\n");
      out.write("   /* 이미지영역  */\r\n");
      out.write("   .image-inner img {\r\n");
      out.write("      width: 100%;\r\n");
      out.write("   }\r\n");
      out.write("   /*좋아요*/\r\n");
      out.write("   .like-inner {\r\n");
      out.write("      padding: 10px 0;\r\n");
      out.write("      border-bottom: 1px solid #ddd;\r\n");
      out.write("      border-top: 1px solid #ddd;\r\n");
      out.write("      margin-top: 10px;\r\n");
      out.write("   }\r\n");
      out.write("   \r\n");
      out.write("   .like-inner img {\r\n");
      out.write("      width: 20px;\r\n");
      out.write("      height: 20px;\r\n");
      out.write("   }\r\n");
      out.write("   \r\n");
      out.write("   .link-inner {\r\n");
      out.write("      overflow: hidden;\r\n");
      out.write("      padding: 10px 0;\r\n");
      out.write("   }\r\n");
      out.write("   \r\n");
      out.write("   .link-inner a {\r\n");
      out.write("      float: left;\r\n");
      out.write("      width: 33.3333%;\r\n");
      out.write("      text-align: center;\r\n");
      out.write("      text-decoration: none;\r\n");
      out.write("      color: #333333;\r\n");
      out.write("   }\r\n");
      out.write("   \r\n");
      out.write("   .link-inner i {\r\n");
      out.write("      margin: 0 5px;\r\n");
      out.write("   }\r\n");
      out.write("   \r\n");
      out.write("   /*767미만 사이즈에서 해당 css가 적용됨*/\r\n");
      out.write("   /*xs가 767사이즈   */\r\n");
      out.write("   @media ( max-width :767px) {\r\n");
      out.write("      aside {\r\n");
      out.write("         display: none;\r\n");
      out.write("      }\r\n");
      out.write("   }\r\n");
      out.write("   /* 파일업로드 버튼 바꾸기 */\r\n");
      out.write("   .filebox label {\r\n");
      out.write("      display: inline-block;\r\n");
      out.write("      padding: 6px 10px;\r\n");
      out.write("      color: #fff;\r\n");
      out.write("      font-size: inherit;\r\n");
      out.write("      line-height: normal;\r\n");
      out.write("      vertical-align: middle;\r\n");
      out.write("      background-color: #5cb85c;\r\n");
      out.write("      cursor: pointer;\r\n");
      out.write("      border: 1px solid #4cae4c;\r\n");
      out.write("      border-radius: none;\r\n");
      out.write("      -webkit-transition: background-color 0.2s;\r\n");
      out.write("      transition: background-color 0.2s;\r\n");
      out.write("   }\r\n");
      out.write("   \r\n");
      out.write("   .filebox label:hover {\r\n");
      out.write("      background-color: #6ed36e;\r\n");
      out.write("   }\r\n");
      out.write("   \r\n");
      out.write("   .filebox label:active {\r\n");
      out.write("      background-color: #367c36;\r\n");
      out.write("   }\r\n");
      out.write("   \r\n");
      out.write("   .filebox input[type=\"file\"] {\r\n");
      out.write("      position: absolute;\r\n");
      out.write("      width: 1px;\r\n");
      out.write("      height: 1px;\r\n");
      out.write("      padding: 0;\r\n");
      out.write("      margin: -1px;\r\n");
      out.write("      overflow: hidden;\r\n");
      out.write("      clip: rect(0, 0, 0, 0);\r\n");
      out.write("      border: 0;\r\n");
      out.write("   }\r\n");
      out.write("   \r\n");
      out.write("   /* sns파일 업로드시 미리보기  */\r\n");
      out.write("   .fileDiv {\r\n");
      out.write("      height: 100px;\r\n");
      out.write("      width: 200px;\r\n");
      out.write("      display: none;\r\n");
      out.write("      margin-bottom: 10px;\r\n");
      out.write("   }\r\n");
      out.write("   \r\n");
      out.write("   .fileDiv img {\r\n");
      out.write("      width: 100%;\r\n");
      out.write("      height: 100%;\r\n");
      out.write("   }\r\n");
      out.write("   /* 모달창 조절 */\r\n");
      out.write("   .modal-body {\r\n");
      out.write("      padding: 0px;\r\n");
      out.write("   }\r\n");
      out.write("   \r\n");
      out.write("   .modal-content>.row {\r\n");
      out.write("      margin: 0px;\r\n");
      out.write("   }\r\n");
      out.write("   \r\n");
      out.write("   .modal-body>.modal-img {\r\n");
      out.write("      padding: 0px;\r\n");
      out.write("   }\r\n");
      out.write("   \r\n");
      out.write("   .modal-body>.modal-con {\r\n");
      out.write("      padding: 15px;\r\n");
      out.write("   }\r\n");
      out.write("   \r\n");
      out.write("   .modal-inner {\r\n");
      out.write("      position: relative;\r\n");
      out.write("   }\r\n");
      out.write("   \r\n");
      out.write("   .modal-inner .profile {\r\n");
      out.write("      position: absolute; /*부모기준으로 위치지정 릴레이티브*/\r\n");
      out.write("      top: 0px;\r\n");
      out.write("      left: 0px;\r\n");
      out.write("   }\r\n");
      out.write("   \r\n");
      out.write("   .modal-inner .title {\r\n");
      out.write("      padding-left: 50px;\r\n");
      out.write("   }\r\n");
      out.write("   \r\n");
      out.write("   .modal-inner p {\r\n");
      out.write("      margin: 0px;\r\n");
      out.write("   }\r\n");
      out.write("   </style>\r\n");
      out.write("   \r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("   ");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("\r\n");
      out.write("    <meta charset=\"utf-8\">\r\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("    <title>인덱스를 만들어 보자</title>\r\n");
      out.write("\r\n");
      out.write("   ");
      out.write("\r\n");
      out.write("    <link href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/bootstrap.css\" rel=\"stylesheet\">\r\n");
      out.write("    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.11.2/jquery.min.js\"></script>\r\n");
      out.write("    <!--개인 디자인 추가-->\r\n");
      out.write("    <link href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/style.css\" rel=\"stylesheet\">\r\n");
      out.write("    <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/js/bootstrap.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("   <header>\r\n");
      out.write("        <div class=\"container-fluid\">\r\n");
      out.write("            <div class=\"row\">\r\n");
      out.write("                <div class=\"container\">\r\n");
      out.write("                    <div class=\"navbar\">\r\n");
      out.write("                        <div class=\"navbar-header\">\r\n");
      out.write("                            <!--data-toggle 같은 것들은 내부적으로 지원하는 반응형 API기능이므로 지우면 안됩니다-->\r\n");
      out.write("                            <button type=\"button\" class=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\"#myNavbar\">\r\n");
      out.write("                                <span class=\"icon-bar\"></span>\r\n");
      out.write("                                <span class=\"icon-bar\"></span>\r\n");
      out.write("                                <span class=\"icon-bar\"></span>\r\n");
      out.write("                            </button>\r\n");
      out.write("                            <a class=\"navbar-brand\" href=\"#\"><img width=\"30\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/img/logo.svg\" alt=\"Brand\"></a>\r\n");
      out.write("                        </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("                        <div class=\"collapse navbar-collapse\" id=\"myNavbar\">\r\n");
      out.write("                            <ul class=\"nav navbar-nav\">\r\n");
      out.write("                                <li class=\"active\"><a href=\"");
      if (_jspx_meth_c_005furl_005f0(_jspx_page_context))
        return;
      out.write("\">Main</a></li>\r\n");
      out.write("                                <li><a href=\"");
      if (_jspx_meth_c_005furl_005f1(_jspx_page_context))
        return;
      out.write("\">자유게시판</a></li>\r\n");
      out.write("                                <li><a href=\"");
      if (_jspx_meth_c_005furl_005f2(_jspx_page_context))
        return;
      out.write("\">SNS</a></li>\r\n");
      out.write("                                <!-- \r\n");
      out.write("            <li><a href=\"#\">강의</a></li>\r\n");
      out.write("                                <li><a href=\"#\">Form</a></li>\r\n");
      out.write("                                <li><a href=\"#\">Board</a></li>\r\n");
      out.write("             -->\r\n");
      out.write("\r\n");
      out.write("                            </ul>\r\n");
      out.write("                            <ul class=\"nav navbar-nav navbar-right\">\r\n");
      out.write("                                <li class=\"dropdown\">\r\n");
      out.write("                                    <a class=\"dropdown-toggle\" data-toggle=\"dropdown\" href=\"#\">로그인\r\n");
      out.write("                                        <span class=\"caret\"></span></a>\r\n");
      out.write("                                    <ul class=\"dropdown-menu\">\r\n");
      out.write("                                        ");
      if (_jspx_meth_c_005fchoose_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("                                    </ul>\r\n");
      out.write("                                    \r\n");
      out.write("                                </li>\r\n");
      out.write("                            </ul>\r\n");
      out.write("\r\n");
      out.write("                            <form class=\"navbar-form navbar-right\" action=\"\">\r\n");
      out.write("                                <div class=\"input-group\">\r\n");
      out.write("                                    <input type=\"text\" class=\"form-control\" placeholder=\"Search\">\r\n");
      out.write("                                    <div class=\"input-group-btn\">\r\n");
      out.write("\r\n");
      out.write("                                        <button class=\"btn btn-primary\" type=\"submit\">\r\n");
      out.write("                                               검색\r\n");
      out.write("                                        </button>\r\n");
      out.write("                                    </div>\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </form>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </header>");
      out.write("\r\n");
      out.write("   <section>\r\n");
      out.write("      <div class=\"container\">\r\n");
      out.write("         <div class=\"row\">\r\n");
      out.write("            <aside class=\"col-sm-2\">\r\n");
      out.write("               <div class=\"aside-inner\">\r\n");
      out.write("                  <div class=\"menu1\">\r\n");
      out.write("                     ");
      if (_jspx_meth_c_005fchoose_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("                  </div>\r\n");
      out.write("                  <div class=\"menu2\">\r\n");
      out.write("                     <p>둘러보기</p>\r\n");
      out.write("                     <ul>\r\n");
      out.write("                        <li>기부 캠페인</li>\r\n");
      out.write("                        <li>페이지</li>\r\n");
      out.write("                        <li>그룹</li>\r\n");
      out.write("                        <li>이벤트</li>\r\n");
      out.write("                        <li>친구리스트</li>\r\n");
      out.write("                     </ul>\r\n");
      out.write("                  </div>\r\n");
      out.write("               </div>\r\n");
      out.write("            </aside>\r\n");
      out.write("            <div class=\"col-xs-12 col-sm-8 section-inner\">\r\n");
      out.write("               <h4>게시물 만들기</h4>\r\n");
      out.write("               <!-- 파일 업로드 폼입니다 -->\r\n");
      out.write("               <div class=\"fileDiv\">\r\n");
      out.write("                  <img id=\"fileImg\" src=\"");
      if (_jspx_meth_c_005furl_005f8(_jspx_page_context))
        return;
      out.write("\">\r\n");
      out.write("               </div>\r\n");
      out.write("               <div class=\"reply-content\">\r\n");
      out.write("                  <textarea class=\"form-control\" rows=\"3\" name=\"content\"\r\n");
      out.write("                     id=\"content\" placeholder=\"무슨 생각을 하고 계신가요?\"></textarea>\r\n");
      out.write("                  <div class=\"reply-group\">\r\n");
      out.write("                     <div class=\"filebox pull-left\">\r\n");
      out.write("                        <label for=\"file\">이미지업로드</label> \r\n");
      out.write("                        <input type=\"file\" name=\"file\" id=\"file\">\r\n");
      out.write("                     </div>\r\n");
      out.write("                     <button type=\"button\" class=\"right btn btn-info\" id=\"uploadBtn\">등록하기</button>\r\n");
      out.write("                  </div>\r\n");
      out.write("               </div>\r\n");
      out.write("               <!-- 파일 업로드 폼 끝 -->\r\n");
      out.write("               \r\n");
      out.write("               \r\n");
      out.write("            <div id=\"contentDiv\">\r\n");
      out.write("               \r\n");
      out.write("               <!-- 비동기 방식으로 서버와 통신을 진행한 후\r\n");
      out.write("                  목록을 만들어서 붙일 영역. -->\r\n");
      out.write("               \r\n");
      out.write("            </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <!--우측 어사이드-->\r\n");
      out.write("            <aside class=\"col-sm-2\">\r\n");
      out.write("               <div class=\"aside-inner\">\r\n");
      out.write("                  <div class=\"menu1\">\r\n");
      out.write("                     <p>목록</p>\r\n");
      out.write("                     <ul>\r\n");
      out.write("                        <li>목록1</li>\r\n");
      out.write("                        <li>목록2</li>\r\n");
      out.write("                        <li>목록3</li>\r\n");
      out.write("                        <li>목록4</li>\r\n");
      out.write("                        <li>목록5</li>\r\n");
      out.write("                     </ul>\r\n");
      out.write("                  </div>\r\n");
      out.write("               </div>\r\n");
      out.write("            </aside>\r\n");
      out.write("         </div>\r\n");
      out.write("      </div>\r\n");
      out.write("   </section>\r\n");
      out.write("   ");
      out.write("\r\n");
      out.write("    <footer>\r\n");
      out.write("        <div class=\"container\">\r\n");
      out.write("            <div class=\"row\">\r\n");
      out.write("                <div class=\"col-md-7 col-sm-12\">\r\n");
      out.write("                    <div class=\"copyright\">\r\n");
      out.write("                        <a href=\"\">\r\n");
      out.write("                            <img width=\"20\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/img/logo.svg\" alt=\"Brand\">\r\n");
      out.write("                        </a>\r\n");
      out.write("                        Bootstrap | 대표자 : 홍길동 | E-MAIL : info&#64;info.com<br>\r\n");
      out.write("                        사업자번호 : 123-56-78910 | 개인정보보호책임자 : 홍길동 | 통신판매업 : 2019-서울강남-0001<br>\r\n");
      out.write("                        주소 : 서울시 강남구\r\n");
      out.write("                        <address>&copy;Bootstrap. ALL RIGHTS RESERVED</address>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"col-md-5 col-sm-12 text-right\">\r\n");
      out.write("                    <ul class=\"footer-menu\">\r\n");
      out.write("                        <li><a href=\"#\">고객센터</a></li>\r\n");
      out.write("                        <li><a href=\"#\">이용약관</a></li>\r\n");
      out.write("                        <li><a href=\"#\">개인정보취급방침</a></li>\r\n");
      out.write("                    </ul>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </footer>\r\n");
      out.write("    <!-- //footer -->");
      out.write("\r\n");
      out.write("   <!-- 모달 -->\r\n");
      out.write("   <div class=\"modal fade\" id=\"snsModal\" role=\"dialog\">\r\n");
      out.write("         <div class=\"modal-dialog modal-lg\">\r\n");
      out.write("         <div class=\"modal-content\">\r\n");
      out.write("            <div class=\"modal-body row\">\r\n");
      out.write("               <div class=\"modal-img col-sm-8 col-xs-6\" >\r\n");
      out.write("                  <img src=\"../resources/img/img_ready.png\" id=\"snsImg\" width=\"100%\">\r\n");
      out.write("               </div>\r\n");
      out.write("               <div class=\"modal-con col-sm-4 col-xs-6\">\r\n");
      out.write("                  <div class=\"modal-inner\">\r\n");
      out.write("                  <div class=\"profile\">\r\n");
      out.write("                     <img src=\"../resources/img/profile.png\">\r\n");
      out.write("                  </div>\r\n");
      out.write("                  <div class=\"title\">\r\n");
      out.write("                     <p id=\"snsWriter\">테스트</p>\r\n");
      out.write("                     <small id=\"snsRegdate\">21시간전</small>\r\n");
      out.write("                  </div>\r\n");
      out.write("                  <div class=\"content-inner\">\r\n");
      out.write("                     <p id=\"snsContent\">삶이 우리를 끝없이 시험하기에 고어텍스는 한계를 테스트합니다</p>\r\n");
      out.write("                  </div>\r\n");
      out.write("                  <div class=\"link-inner\">\r\n");
      out.write("                     <a href=\"##\"><i class=\"glyphicon glyphicon-thumbs-up\"></i>좋아요</a>\r\n");
      out.write("                     <a href=\"##\"><i class=\"glyphicon glyphicon-comment\"></i>댓글달기</a> \r\n");
      out.write("                     <a href=\"##\"><i class=\"glyphicon glyphicon-share-alt\"></i>공유하기</a>\r\n");
      out.write("                  </div>\r\n");
      out.write("                  \r\n");
      out.write("                  <div id=\"replyContentDiv\" class=\"reply-inner\">\r\n");
      out.write("                     <div>\r\n");
      out.write("                     \r\n");
      out.write("                     </div>\r\n");
      out.write("                  </div>\r\n");
      out.write("                  <div class=\"reply-form\">\r\n");
      out.write("                                <textarea name=\"content\" id=\"modal-reply-content\" placeholder=\"댓글 입력\"></textarea>\r\n");
      out.write("                                <input type=\"button\" value=\"게시\" id=\"replyRegBtn\"></input>\r\n");
      out.write("                        </div>\r\n");
      out.write("                  \r\n");
      out.write("                  </div>\r\n");
      out.write("               </div>\r\n");
      out.write("            </div>\r\n");
      out.write("         </div>\r\n");
      out.write("      </div>\r\n");
      out.write("   </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("   <script>\r\n");
      out.write("   \r\n");
      out.write("      $(function() {\r\n");
      out.write("         \r\n");
      out.write("         //등록하기 버튼 클릭 이벤트\r\n");
      out.write("         $('#uploadBtn').click(function() {\r\n");
      out.write("            regist();\r\n");
      out.write("         });\r\n");
      out.write("         \r\n");
      out.write("         //등록을 담당하는 함수\r\n");
      out.write("         function regist() {\r\n");
      out.write("            //세션에서 현재 로그인 중인 사용자 정보(아이디)를 얻어오자\r\n");
      out.write("            const user_id = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.login.userId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\r\n");
      out.write("            //자바스크립트의 파일 확장자 체크 검색.\r\n");
      out.write("            let file = $('#file').val();\r\n");
      out.write("            \r\n");
      out.write("            console.log(user_id);\r\n");
      out.write("            console.log(file);\r\n");
      out.write("            //.을 제거한 확장자만 얻어낸 후 그것을 소문자로 일괄 변경\r\n");
      out.write("            file = file.slice(file.indexOf('.') + 1).toLowerCase();\r\n");
      out.write("            console.log(file);\r\n");
      out.write("            if(file !== 'jpg' && file !== 'png' && file !== 'jpeg' && file != 'bmp') {\r\n");
      out.write("               alert('이미지 파일(jpg, png, jpeg, bmp)만 등록이 가능합니다.');\r\n");
      out.write("               $('#file').val('');\r\n");
      out.write("               return;\r\n");
      out.write("            } else if(user_id === '') { //세션 데이터가 없다 -> 로그인 x\r\n");
      out.write("               alert('로그인이 필요한 서비스 입니다.');\r\n");
      out.write("               return;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            //ajax 폼 전송의 핵심 FormData 객체.\r\n");
      out.write("            const formData = new FormData();\r\n");
      out.write("            const data = $('#file');\r\n");
      out.write("            \r\n");
      out.write("            console.log('폼 데이터: ' + formData);\r\n");
      out.write("            console.log('data: ' + data);\r\n");
      out.write("            console.log(data[0]); //input type=\"file\" 요소를 지목할 때 사용.\r\n");
      out.write("            console.log(data[0].files); //파일 태그에 담긴 파일 정보를 확인하는 키값.\r\n");
      out.write("            console.log(data[0].files[0]); //사용자가 등록한 최종 파일 정보\r\n");
      out.write("            \r\n");
      out.write("            /*\r\n");
      out.write("            data[index] -> 파일 업로드 버튼이 여러 개 존재할 경우 요소의 인덱스를 지목해서 가져오는 법.\r\n");
      out.write("            우리는 요소를 id로 취득했기 때문에 하나만 찍히지만, class이름 같은 걸로 지목하면 여러 개가 취득되겠죠?\r\n");
      out.write("            files[index] -> 파일이 여러 개 전송되는 경우, 몇 번째 파일인지를 지목.\r\n");
      out.write("            우리는 multiple 속성을 주지 않았기 때문에 0번 인덱스 밖에 없는 겁니다.\r\n");
      out.write("            */\r\n");
      out.write("            \r\n");
      out.write("            //FormData 객체에 사용자가 업로드한 파일의 정보가 들어있는 객체를 전달.\r\n");
      out.write("            formData.append('file', data[0].files[0]);\r\n");
      out.write("            //content(글 내용) 값을 얻어와서 폼 데이터에 추가.\r\n");
      out.write("            const content = $('#content').val();\r\n");
      out.write("            formData.append('content', content);\r\n");
      out.write("            \r\n");
      out.write("            //비동기 방식으로 파일 업로드 및 게시글 등록을 진행.\r\n");
      out.write("            $.ajax({\r\n");
      out.write("               url: '");
      if (_jspx_meth_c_005furl_005f9(_jspx_page_context))
        return;
      out.write("',\r\n");
      out.write("               type: 'post',\r\n");
      out.write("               data: formData, //폼 데이터 객체를 넘깁니다.\r\n");
      out.write("               contentType: false, //ajax 방식에서 파일을 넘길 때는 반드시 false로 처리 -> \"multipart/form-data\"로 선언됨.\r\n");
      out.write("               processData: false, //폼 데이터를 &변수=값&변수=값... 형식으로 변경되는 것을  막는 요소.\r\n");
      out.write("               success: function(result) {\r\n");
      out.write("                  if(result === 'success') {\r\n");
      out.write("                     $('#file').val(''); //파일 선택지 비우기\r\n");
      out.write("                     $('#content').val(''); //글 영역 비우기\r\n");
      out.write("                     $('.fileDiv').css('display', 'none'); //미리보기 감추기\r\n");
      out.write("                     getList(1, true); //글 목록 함수 호출.\r\n");
      out.write("                  } else {\r\n");
      out.write("                     alert('업로드에 실패했습니다. 관리자에게 문의 해 주세요.');\r\n");
      out.write("                  }\r\n");
      out.write("               },\r\n");
      out.write("               error: function(request, status, error) {\r\n");
      out.write("                  console.log('code: ' + request + '\\n message: ' + request.responseText + \"\\n\" + 'error: ' + error);\r\n");
      out.write("                  alert('업로드에 실패했습니다. 관리자에게 문의 해 주세요.');\r\n");
      out.write("               }\r\n");
      out.write("               \r\n");
      out.write("            }); //end ajax\r\n");
      out.write("            \r\n");
      out.write("         } //end regist()\r\n");
      out.write("         \r\n");
      out.write("         \r\n");
      out.write("         //리스트 작업\r\n");
      out.write("         let str = '';\r\n");
      out.write("         let page = 1;\r\n");
      out.write("         getListLike(true).done(getList);\r\n");
      out.write("         \r\n");
      out.write("         //지금 게시판에 들어온 회원의 좋아요 게시물 목록을 받아오는 함수.\r\n");
      out.write("         function getListLike(isReset) {\r\n");
      out.write("            let deferred = $.Deferred();\r\n");
      out.write("            console.log('먼저 실행되어야 합니다!');\r\n");
      out.write("            const userId = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${login.userId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\r\n");
      out.write("            console.log(userId);\r\n");
      out.write("            \r\n");
      out.write("            if(userId !== '') {\r\n");
      out.write("               $.ajax({\r\n");
      out.write("                  type: 'post',\r\n");
      out.write("                  url: '");
      if (_jspx_meth_c_005furl_005f10(_jspx_page_context))
        return;
      out.write("',\r\n");
      out.write("                  data: userId,\r\n");
      out.write("                  contentType: 'application/json',\r\n");
      out.write("                  success: function(result) {\r\n");
      out.write("                     console.log('result: ' + result); //게시글 번호들\r\n");
      out.write("                     if(isReset) {\r\n");
      out.write("                    	 deferred.resolve(result, page, true);\r\n");
      out.write("                     } else {\r\n");
      out.write("                    	 deferred.resolve(result, page, false);\r\n");
      out.write("                     }                  \r\n");
      out.write("                  }\r\n");
      out.write("               }); //end ajax\r\n");
      out.write("            } else {\r\n");
      out.write("            	if(isReset) {\r\n");
      out.write("               	 deferred.resolve(null, page, true);\r\n");
      out.write("                } else {\r\n");
      out.write("               	 deferred.resolve(null, page, false);\r\n");
      out.write("                }   \r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            return deferred.promise();\r\n");
      out.write("         }\r\n");
      out.write("         \r\n");
      out.write("         \r\n");
      out.write("         \r\n");
      out.write("         function getList(data, page, reset) {\r\n");
      out.write("            \r\n");
      out.write("            console.log('getList함수 호출!');\r\n");
      out.write("            console.log(data);\r\n");
      out.write("            console.log(page);\r\n");
      out.write("            console.log(reset);\r\n");
      out.write("            \r\n");
      out.write("            if(reset === true) {\r\n");
      out.write("               str = ''; //화면 리셋 여부가 true라면 str변수를 초기화.\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            $.getJSON(\r\n");
      out.write("               '");
      if (_jspx_meth_c_005furl_005f11(_jspx_page_context))
        return;
      out.write("',\r\n");
      out.write("               function(list) {\r\n");
      out.write("                  console.log(list);\r\n");
      out.write("                  \r\n");
      out.write("                  for(let i=0; i<list.length; i++) {\r\n");
      out.write("                     \r\n");
      out.write("                     str   +=\r\n");
      out.write("                     `<div class=\"title-inner\">\r\n");
      out.write("                        <!--제목영역-->\r\n");
      out.write("                        <div class=\"profile\">\r\n");
      out.write("                           <img src=\"");
      if (_jspx_meth_c_005furl_005f12(_jspx_page_context))
        return;
      out.write("\">\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"title\">\r\n");
      out.write("                           <p>` + list[i].writer + `</p>\r\n");
      out.write("                           <small>` + timeStamp(list[i].regdate) + `</small> &nbsp;&nbsp;\r\n");
      out.write("                           <a href=\"");
      if (_jspx_meth_c_005furl_005f13(_jspx_page_context))
        return;
      out.write("\">이미지 다운로드</a>\r\n");
      out.write("                        </div>\r\n");
      out.write("                     </div>\r\n");
      out.write("                     <div class=\"content-inner\">\r\n");
      out.write("                        <!--내용영역-->\r\n");
      out.write("                        <p>` + (list[i].content === null ? '' : list[i].content) + `</p>\r\n");
      out.write("                     </div>\r\n");
      out.write("                     <div class=\"image-inner\">\r\n");
      out.write("                        <!-- 이미지영역 -->\r\n");
      out.write("                        <a href=\"` + list[i].bno + `\">\r\n");
      out.write("                           <img src=\"");
      if (_jspx_meth_c_005furl_005f14(_jspx_page_context))
        return;
      out.write("\">\r\n");
      out.write("                        </a>\r\n");
      out.write("                     </div>\r\n");
      out.write("                     <div class=\"like-inner\">\r\n");
      out.write("                        <!--좋아요-->\r\n");
      out.write("                        <img src=\"../resources/img/icon.jpg\"> <span>` + list[i].likeCnt + `</span>\r\n");
      out.write("                     </div>\r\n");
      out.write("                     <div class=\"link-inner\">`;\r\n");
      out.write("                     	if(data !== null) {\r\n");
      out.write("                     		if(data.includes(list[i].bno)) {\r\n");
      out.write("                     			str += `<a id=\"likeBtn\" href=\"` + list[i].bno + `\"><img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/img/like2.png\" width=\"20px\" height=\"20px\"> 좋아요</a>`;\r\n");
      out.write("                     		} else {\r\n");
      out.write("                     			str += `<a id=\"likeBtn\" href=\"` + list[i].bno + `\"><img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/img/like1.png\" width=\"20px\" height=\"20px\"> 좋아요</a>`;\r\n");
      out.write("                     		}\r\n");
      out.write("                     	} else {\r\n");
      out.write("                     		str += `<a id=\"likeBtn\" href=\"` + list[i].bno + `\"><img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/img/like1.png\" width=\"20px\" height=\"20px\"> 좋아요</a>`;\r\n");
      out.write("                     	}\r\n");
      out.write("                     	str += `\r\n");
      out.write("                        <a id=\"comment\" href=\"` + list[i].bno + `\"><i class=\"glyphicon glyphicon-comment\"></i>댓글달기</a> \r\n");
      out.write("                        <a id=\"delBtn\" href=\"` + list[i].bno + `\"><i class=\"glyphicon glyphicon-remove\"></i>삭제하기</a>\r\n");
      out.write("                     </div>\r\n");
      out.write("                     `;\r\n");
      out.write("                     $('#contentDiv').html(str);\r\n");
      out.write("                  \r\n");
      out.write("                  } //end for\r\n");
      out.write("               }\r\n");
      out.write("                  \r\n");
      out.write("            ); //end getJSON\r\n");
      out.write("                     \r\n");
      out.write("         } //end getList()\r\n");
      out.write("         \r\n");
      out.write("         \r\n");
      out.write("         //상세보기 처리 (모달창 열어줄 겁니다.)\r\n");
      out.write("         $('#contentDiv').on('click', '.image-inner a, .link-inner #comment', function(e) {\r\n");
      out.write("            e.preventDefault(); //a의 고유 기능 중지.\r\n");
      out.write("            \r\n");
      out.write("            //글 번호 얻어오기\r\n");
      out.write("            const bno = $(this).attr('href');\r\n");
      out.write("            \r\n");
      out.write("            $.getJSON(\r\n");
      out.write("               '");
      if (_jspx_meth_c_005furl_005f15(_jspx_page_context))
        return;
      out.write("' + bno,\r\n");
      out.write("               function(data) {\r\n");
      out.write("                  console.log(data);\r\n");
      out.write("                  \r\n");
      out.write("                  //미리 준비한 모달창에 뿌릴 겁니다. (모달 위에 있어요.)\r\n");
      out.write("                  //값을 제 위치에 잘 뿌려 주시고 모달을 열어 주세요.\r\n");
      out.write("                  const src = '");
      if (_jspx_meth_c_005furl_005f16(_jspx_page_context))
        return;
      out.write("'\r\n");
      out.write("                  $('#snsImg').attr('src', src); //이미지 경로 처리\r\n");
      out.write("                  $('#snsWriter').html(data.writer); //작성자 처리\r\n");
      out.write("                  $('#snsRegdate').html(timeStamp(data.regdate)); //날짜 처리\r\n");
      out.write("                  $('#snsContent').html(data.content); //내용처리\r\n");
      out.write("                  $('#snsModal').modal('show'); //모달 열기\r\n");
      out.write("                  \r\n");
      out.write("               }\r\n");
      out.write("            );\r\n");
      out.write("            \r\n");
      out.write("            \r\n");
      out.write("         }); //상세보기 처리 끝.\r\n");
      out.write("         \r\n");
      out.write("         //삭제 처리\r\n");
      out.write("         //삭제하기 링크를 클릭했을 때 이벤트를 발생 시켜서\r\n");
      out.write("         //비동기 방식으로 삭제를 진행해 주세요. (삭제 버튼은 한 화면에 여러개 겠죠?)\r\n");
      out.write("         //서버쪽에서 권한을 확인 해 주세요. (작성자와 로그인 중인 사용자의 id를 비교해서)\r\n");
      out.write("         //일치하지 않으면 문자열 \"noAuth\" 리턴, 성공하면 \"Success\" 리턴.\r\n");
      out.write("         // url: /snsBoard/delete, method: post\r\n");
      out.write("         \r\n");
      out.write("         $('#contentDiv').on('click', '.link-inner #delBtn', function(e) {\r\n");
      out.write("            e.preventDefault();\r\n");
      out.write("            \r\n");
      out.write("            const bno = $(this).attr('href');\r\n");
      out.write("            \r\n");
      out.write("            $.ajax({\r\n");
      out.write("               type: 'post',\r\n");
      out.write("               url: '");
      if (_jspx_meth_c_005furl_005f17(_jspx_page_context))
        return;
      out.write("',\r\n");
      out.write("               data: bno,\r\n");
      out.write("               contentType: 'application/json',\r\n");
      out.write("               success: function(result) {\r\n");
      out.write("                  if(result === 'noAuth') {\r\n");
      out.write("                     alert('권한이 없습니다.');\r\n");
      out.write("                  } else if(result === 'fail') {\r\n");
      out.write("                     alert('삭제에 실패했습니다. 관리자에게 문의하세요.');\r\n");
      out.write("                  } else {\r\n");
      out.write("                     alert('게시물이 정상적으로 삭제되었습니다.');\r\n");
      out.write("                     getListLike(true).done(getList);//삭제가 반영된 글 목록을 새롭게 보여줘야 하기 때문에 리셋 여부를 true\r\n");
      out.write("                  }\r\n");
      out.write("               },\r\n");
      out.write("               error: function() {\r\n");
      out.write("                  alert('삭제에 실패했습니다. 관리자에게 문의 해 주세요.');\r\n");
      out.write("               }\r\n");
      out.write("            }); //end ajax\r\n");
      out.write("            \r\n");
      out.write("         }); //삭제 처리 끝.\r\n");
      out.write("         \r\n");
      out.write("         \r\n");
      out.write("         //무한 스크롤\r\n");
      out.write("         $(window).scroll(function() {\r\n");
      out.write("            //윈도우(device)의 높이와 현재 스크롤 위치 값을 더한 뒤, \r\n");
      out.write("            //문서(컨텐츠)의 높이와 비교해서 같다면 로직을 수행.\r\n");
      out.write("            //문서 높이 - 브라우저 창 높이 = 스크롤 창의 끝 높이와 같다면 -> 새로운 내용을 불러오자.\r\n");
      out.write("            if(Math.round($(window).scrollTop()) === $(document).height() - $(window).height()) {\r\n");
      out.write("               //사용자의 스크롤이 바닥에 닿았을 때, 페이지 변수의 값을 하나 올리고\r\n");
      out.write("               //reset 여부는 false를 주셔서 누적해서 계속 불러 오시면 됩니다.\r\n");
      out.write("               //게시글을 몇 개씩 불러 올지는 페이징 알고리즘에서 정해 주시면 됩니다.\r\n");
      out.write("               page++;\r\n");
      out.write("               getListLike(false).done(getList); //getListLike()함수가 종료되면 getList함수 호출\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("         });\r\n");
      out.write("         \r\n");
      out.write("         //좋아요 기능 구현\r\n");
      out.write("         $('#contentDiv').on('click', '#likeBtn', function(e) {\r\n");
      out.write("            e.preventDefault();\r\n");
      out.write("            console.log('좋아요 버튼이 클릭됨!');\r\n");
      out.write("            console.log(e.target);\r\n");
      out.write("            \r\n");
      out.write("            if(e.target.matches('img')) {\r\n");
      out.write("               $('#likeBtn').click();\r\n");
      out.write("               return;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            const bno = $(this).attr('href');\r\n");
      out.write("            const id = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${login.userId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'; //현재 로그인 중인 사용자의 아이디\r\n");
      out.write("            if(id === '') {\r\n");
      out.write("               alert('로그인이 필요합니다.');\r\n");
      out.write("               return;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            $.ajax({\r\n");
      out.write("               type: 'post',\r\n");
      out.write("               url: '");
      if (_jspx_meth_c_005furl_005f18(_jspx_page_context))
        return;
      out.write("',\r\n");
      out.write("               contentType: 'application/json',\r\n");
      out.write("               data: JSON.stringify({\r\n");
      out.write("                  'bno': bno,\r\n");
      out.write("                  'userId': id\r\n");
      out.write("               }),\r\n");
      out.write("               success: function(result) {\r\n");
      out.write("                  console.log('result: ' + result);\r\n");
      out.write("                  if(result === 'like') {\r\n");
      out.write("                     e.target.firstChild.setAttribute('src', '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/img/like2.png');\r\n");
      out.write("                     e.target.style.color = 'blue';\r\n");
      out.write("                     const $cnt = e.target.parentNode.previousElementSibling.children[1];\r\n");
      out.write("                     console.log($cnt);\r\n");
      out.write("                     $cnt.textContent = Number($cnt.textContent) + 1;\r\n");
      out.write("                     \r\n");
      out.write("                  } else {\r\n");
      out.write("                     e.target.firstChild.setAttribute('src', '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/img/like1.png');\r\n");
      out.write("                     e.target.style.color = 'black';\r\n");
      out.write("                     const $cnt = e.target.parentNode.previousElementSibling.children[1];\r\n");
      out.write("                     console.log($cnt);\r\n");
      out.write("                     $cnt.textContent = Number($cnt.textContent) - 1;\r\n");
      out.write("\r\n");
      out.write("                  }\r\n");
      out.write("                  \r\n");
      out.write("               },\r\n");
      out.write("               error: function() {\r\n");
      out.write("                  alert('좋아요 진행 에러!');\r\n");
      out.write("               }\r\n");
      out.write("            }); //end ajax\r\n");
      out.write("            \r\n");
      out.write("         });\r\n");
      out.write("         \r\n");
      out.write("         \r\n");
      out.write("         \r\n");
      out.write("         \r\n");
      out.write("         \r\n");
      out.write("      }); //end jQuery\r\n");
      out.write("   \r\n");
      out.write("   \r\n");
      out.write("      //날짜 처리 함수\r\n");
      out.write("      function timeStamp(millis) {\r\n");
      out.write("         const date = new Date(); //현재 날짜\r\n");
      out.write("         //현재 날짜를 밀리초로 변환 - 등록일 밀리초 -> 시간 차\r\n");
      out.write("         const gap = date.getTime() - millis;\r\n");
      out.write("         \r\n");
      out.write("         let time; //리턴할 시간\r\n");
      out.write("         if(gap < 60 * 60 * 24 * 1000) { //1일 미만일 경우\r\n");
      out.write("            if(gap < 60 * 60 * 1000) { //1시간 미만일 경우\r\n");
      out.write("               time = '방금 전';\r\n");
      out.write("            } else {\r\n");
      out.write("               time = parseInt(gap / (1000 * 60 * 60)) + '시간 전';\r\n");
      out.write("            }\r\n");
      out.write("         } else { //1일 이상일 경우\r\n");
      out.write("            const today = new Date(millis);\r\n");
      out.write("            const year = today.getFullYear(); //년\r\n");
      out.write("            const month = today.getMonth() + 1; //월\r\n");
      out.write("            const day = today.getDate(); //일\r\n");
      out.write("            \r\n");
      out.write("            time = year + '년 ' + month + '월 ' + day + '일';\r\n");
      out.write("         }\r\n");
      out.write("         \r\n");
      out.write("         return time;         \r\n");
      out.write("      }\r\n");
      out.write("   \r\n");
      out.write("   \r\n");
      out.write("   \r\n");
      out.write("      //자바 스크립트 파일 미리보기 기능\r\n");
      out.write("      function readURL(input) {\r\n");
      out.write("           if (input.files && input.files[0]) {\r\n");
      out.write("              \r\n");
      out.write("               var reader = new FileReader(); //비동기처리를 위한 파일을 읽는 자바스크립트 객체\r\n");
      out.write("               //readAsDataURL 메서드는 컨텐츠를 특정 Blob 이나 File에서 읽어 오는 역할 (MDN참조)\r\n");
      out.write("              reader.readAsDataURL(input.files[0]); \r\n");
      out.write("               //파일업로드시 화면에 숨겨져있는 클래스fileDiv를 보이게한다\r\n");
      out.write("               $(\".fileDiv\").css(\"display\", \"block\");\r\n");
      out.write("               \r\n");
      out.write("               reader.onload = function(event) { //읽기 동작이 성공적으로 완료 되었을 때 실행되는 익명함수\r\n");
      out.write("                   $('#fileImg').attr(\"src\", event.target.result); \r\n");
      out.write("                   console.log(event.target)//event.target은 이벤트로 선택된 요소를 의미\r\n");
      out.write("              }\r\n");
      out.write("           }\r\n");
      out.write("       }\r\n");
      out.write("      $(\"#file\").change(function() {\r\n");
      out.write("           readURL(this); //this는 #file자신 태그를 의미\r\n");
      out.write("           \r\n");
      out.write("       });\r\n");
      out.write("   </script>\r\n");
      out.write("   \r\n");
      out.write("   \r\n");
      out.write("   \r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005furl_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f0 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f0_reused = false;
    try {
      _jspx_th_c_005furl_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f0.setParent(null);
      // /WEB-INF/views/snsBoard/../include/header.jsp(42,60) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f0.setValue("/");
      int _jspx_eval_c_005furl_005f0 = _jspx_th_c_005furl_005f0.doStartTag();
      if (_jspx_th_c_005furl_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f0);
      _jspx_th_c_005furl_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f0, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f1 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f1_reused = false;
    try {
      _jspx_th_c_005furl_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f1.setParent(null);
      // /WEB-INF/views/snsBoard/../include/header.jsp(43,45) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f1.setValue("/freeboard/freeList");
      int _jspx_eval_c_005furl_005f1 = _jspx_th_c_005furl_005f1.doStartTag();
      if (_jspx_th_c_005furl_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f1);
      _jspx_th_c_005furl_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f1, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f2 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f2_reused = false;
    try {
      _jspx_th_c_005furl_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f2.setParent(null);
      // /WEB-INF/views/snsBoard/../include/header.jsp(44,45) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f2.setValue("/snsBoard/snsList");
      int _jspx_eval_c_005furl_005f2 = _jspx_th_c_005furl_005f2.doStartTag();
      if (_jspx_th_c_005furl_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f2);
      _jspx_th_c_005furl_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f2, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fchoose_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f0 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    boolean _jspx_th_c_005fchoose_005f0_reused = false;
    try {
      _jspx_th_c_005fchoose_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fchoose_005f0.setParent(null);
      int _jspx_eval_c_005fchoose_005f0 = _jspx_th_c_005fchoose_005f0.doStartTag();
      if (_jspx_eval_c_005fchoose_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("                                           ");
          if (_jspx_meth_c_005fwhen_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("                                           ");
          if (_jspx_meth_c_005fotherwise_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("                                       ");
          int evalDoAfterBody = _jspx_th_c_005fchoose_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fchoose_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f0);
      _jspx_th_c_005fchoose_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fchoose_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f0 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f0_reused = false;
    try {
      _jspx_th_c_005fwhen_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      // /WEB-INF/views/snsBoard/../include/header.jsp(58,43) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${login == null}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f0 = _jspx_th_c_005fwhen_005f0.doStartTag();
      if (_jspx_eval_c_005fwhen_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("                                              <li><a href=\"");
          if (_jspx_meth_c_005furl_005f3(_jspx_th_c_005fwhen_005f0, _jspx_page_context))
            return true;
          out.write("\"><span class=\"glyphicon glyphicon-user\"></span>Join</a></li>\r\n");
          out.write("                                              <li><a href=\"");
          if (_jspx_meth_c_005furl_005f4(_jspx_th_c_005fwhen_005f0, _jspx_page_context))
            return true;
          out.write("\"><span class=\"glyphicon glyphicon-log-in\"></span>Login</a></li>\r\n");
          out.write("                                           ");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f0);
      _jspx_th_c_005fwhen_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f3(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fwhen_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f3 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f3_reused = false;
    try {
      _jspx_th_c_005furl_005f3.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f3.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fwhen_005f0);
      // /WEB-INF/views/snsBoard/../include/header.jsp(59,59) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f3.setValue("/user/userJoin");
      int _jspx_eval_c_005furl_005f3 = _jspx_th_c_005furl_005f3.doStartTag();
      if (_jspx_th_c_005furl_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f3);
      _jspx_th_c_005furl_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f3, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f3_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f4(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fwhen_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f4 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f4_reused = false;
    try {
      _jspx_th_c_005furl_005f4.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f4.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fwhen_005f0);
      // /WEB-INF/views/snsBoard/../include/header.jsp(60,59) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f4.setValue("/user/userLogin");
      int _jspx_eval_c_005furl_005f4 = _jspx_th_c_005furl_005f4.doStartTag();
      if (_jspx_th_c_005furl_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f4);
      _jspx_th_c_005furl_005f4_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f4, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f4_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fotherwise_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:otherwise
    org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f0 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
    boolean _jspx_th_c_005fotherwise_005f0_reused = false;
    try {
      _jspx_th_c_005fotherwise_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fotherwise_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      int _jspx_eval_c_005fotherwise_005f0 = _jspx_th_c_005fotherwise_005f0.doStartTag();
      if (_jspx_eval_c_005fotherwise_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("                                              <li><a href=\"");
          if (_jspx_meth_c_005furl_005f5(_jspx_th_c_005fotherwise_005f0, _jspx_page_context))
            return true;
          out.write("\"><span class=\"glyphicon glyphicon-user\"></span>MyPage</a></li>\r\n");
          out.write("                                              <li><a href=\"");
          if (_jspx_meth_c_005furl_005f6(_jspx_th_c_005fotherwise_005f0, _jspx_page_context))
            return true;
          out.write("\"><span class=\"glyphicon glyphicon-log-out\"></span>Logout</a></li>\r\n");
          out.write("                                          ");
          int evalDoAfterBody = _jspx_th_c_005fotherwise_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fotherwise_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f0);
      _jspx_th_c_005fotherwise_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fotherwise_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fotherwise_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f5(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fotherwise_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f5 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f5_reused = false;
    try {
      _jspx_th_c_005furl_005f5.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f5.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fotherwise_005f0);
      // /WEB-INF/views/snsBoard/../include/header.jsp(63,59) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f5.setValue("/user/userMypage");
      int _jspx_eval_c_005furl_005f5 = _jspx_th_c_005furl_005f5.doStartTag();
      if (_jspx_th_c_005furl_005f5.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f5);
      _jspx_th_c_005furl_005f5_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f5, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f5_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f6(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fotherwise_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f6 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f6_reused = false;
    try {
      _jspx_th_c_005furl_005f6.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f6.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fotherwise_005f0);
      // /WEB-INF/views/snsBoard/../include/header.jsp(64,59) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f6.setValue("/user/userLogout");
      int _jspx_eval_c_005furl_005f6 = _jspx_th_c_005furl_005f6.doStartTag();
      if (_jspx_th_c_005furl_005f6.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f6);
      _jspx_th_c_005furl_005f6_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f6, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f6_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fchoose_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f1 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    boolean _jspx_th_c_005fchoose_005f1_reused = false;
    try {
      _jspx_th_c_005fchoose_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fchoose_005f1.setParent(null);
      int _jspx_eval_c_005fchoose_005f1 = _jspx_th_c_005fchoose_005f1.doStartTag();
      if (_jspx_eval_c_005fchoose_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("                        ");
          if (_jspx_meth_c_005fwhen_005f1(_jspx_th_c_005fchoose_005f1, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("                        ");
          if (_jspx_meth_c_005fotherwise_005f1(_jspx_th_c_005fchoose_005f1, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("                     ");
          int evalDoAfterBody = _jspx_th_c_005fchoose_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fchoose_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f1);
      _jspx_th_c_005fchoose_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fchoose_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f1, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f1 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f1_reused = false;
    try {
      _jspx_th_c_005fwhen_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f1);
      // /WEB-INF/views/snsBoard/snsList.jsp(186,24) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${login != null}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f1 = _jspx_th_c_005fwhen_005f1.doStartTag();
      if (_jspx_eval_c_005fwhen_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("                           <p>\r\n");
          out.write("                              <img src=\"../resources/img/profile.png\"> &nbsp;&nbsp;");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${login.userName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("님 \r\n");
          out.write("                           </p>\r\n");
          out.write("                           <ul>\r\n");
          out.write("                              <li>내정보</li>\r\n");
          out.write("                              <li>내쿠폰</li>\r\n");
          out.write("                              <li>내좋아요게시물</li>\r\n");
          out.write("                           </ul>\r\n");
          out.write("                        ");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f1);
      _jspx_th_c_005fwhen_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fotherwise_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f1, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:otherwise
    org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f1 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
    boolean _jspx_th_c_005fotherwise_005f1_reused = false;
    try {
      _jspx_th_c_005fotherwise_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fotherwise_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f1);
      int _jspx_eval_c_005fotherwise_005f1 = _jspx_th_c_005fotherwise_005f1.doStartTag();
      if (_jspx_eval_c_005fotherwise_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("                           <button type=\"button\" class=\"btn btn-info\" onclick=\"location.href='");
          if (_jspx_meth_c_005furl_005f7(_jspx_th_c_005fotherwise_005f1, _jspx_page_context))
            return true;
          out.write("'\">로그인</button>\r\n");
          out.write("                        ");
          int evalDoAfterBody = _jspx_th_c_005fotherwise_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fotherwise_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f1);
      _jspx_th_c_005fotherwise_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fotherwise_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fotherwise_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f7(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fotherwise_005f1, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f7 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f7_reused = false;
    try {
      _jspx_th_c_005furl_005f7.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f7.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fotherwise_005f1);
      // /WEB-INF/views/snsBoard/snsList.jsp(197,94) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f7.setValue("/user/userLogin");
      int _jspx_eval_c_005furl_005f7 = _jspx_th_c_005furl_005f7.doStartTag();
      if (_jspx_th_c_005furl_005f7.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f7);
      _jspx_th_c_005furl_005f7_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f7, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f7_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f8(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f8 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f8_reused = false;
    try {
      _jspx_th_c_005furl_005f8.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f8.setParent(null);
      // /WEB-INF/views/snsBoard/snsList.jsp(217,41) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f8.setValue("/img/img_ready.png");
      int _jspx_eval_c_005furl_005f8 = _jspx_th_c_005furl_005f8.doStartTag();
      if (_jspx_th_c_005furl_005f8.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f8);
      _jspx_th_c_005furl_005f8_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f8, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f8_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f9(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f9 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f9_reused = false;
    try {
      _jspx_th_c_005furl_005f9.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f9.setParent(null);
      // /WEB-INF/views/snsBoard/snsList.jsp(360,21) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f9.setValue("/snsBoard/upload");
      int _jspx_eval_c_005furl_005f9 = _jspx_th_c_005furl_005f9.doStartTag();
      if (_jspx_th_c_005furl_005f9.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f9);
      _jspx_th_c_005furl_005f9_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f9, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f9_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f10(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f10 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f10_reused = false;
    try {
      _jspx_th_c_005furl_005f10.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f10.setParent(null);
      // /WEB-INF/views/snsBoard/snsList.jsp(400,24) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f10.setValue("/snsBoard/listLike");
      int _jspx_eval_c_005furl_005f10 = _jspx_th_c_005furl_005f10.doStartTag();
      if (_jspx_th_c_005furl_005f10.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f10);
      _jspx_th_c_005furl_005f10_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f10, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f10_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f11(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f11 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f11_reused = false;
    try {
      _jspx_th_c_005furl_005f11.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f11.setParent(null);
      // /WEB-INF/views/snsBoard/snsList.jsp(437,16) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f11.setValue("/snsBoard/getList?pageNum=' + page + '");
      int _jspx_eval_c_005furl_005f11 = _jspx_th_c_005furl_005f11.doStartTag();
      if (_jspx_th_c_005furl_005f11.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f11);
      _jspx_th_c_005furl_005f11_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f11, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f11_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f12(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f12 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f12_reused = false;
    try {
      _jspx_th_c_005furl_005f12.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f12.setParent(null);
      // /WEB-INF/views/snsBoard/snsList.jsp(447,37) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f12.setValue("/img/profile.png");
      int _jspx_eval_c_005furl_005f12 = _jspx_th_c_005furl_005f12.doStartTag();
      if (_jspx_th_c_005furl_005f12.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f12);
      _jspx_th_c_005furl_005f12_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f12, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f12_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f13(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f13 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f13_reused = false;
    try {
      _jspx_th_c_005furl_005f13.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f13.setParent(null);
      // /WEB-INF/views/snsBoard/snsList.jsp(452,36) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f13.setValue("/snsBoard/download?fileLoca=` + list[i].fileloca + `&fileName=` + list[i].filename + `");
      int _jspx_eval_c_005furl_005f13 = _jspx_th_c_005furl_005f13.doStartTag();
      if (_jspx_th_c_005furl_005f13.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f13);
      _jspx_th_c_005furl_005f13_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f13, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f13_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f14(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f14 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f14_reused = false;
    try {
      _jspx_th_c_005furl_005f14.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f14.setParent(null);
      // /WEB-INF/views/snsBoard/snsList.jsp(462,37) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f14.setValue("/snsBoard/display?fileLoca=` + list[i].fileloca + `&fileName=` + list[i].filename + `");
      int _jspx_eval_c_005furl_005f14 = _jspx_th_c_005furl_005f14.doStartTag();
      if (_jspx_th_c_005furl_005f14.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f14);
      _jspx_th_c_005furl_005f14_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f14, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f14_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f15(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f15 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f15_reused = false;
    try {
      _jspx_th_c_005furl_005f15.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f15.setParent(null);
      // /WEB-INF/views/snsBoard/snsList.jsp(502,16) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f15.setValue("/snsBoard/getDetail/");
      int _jspx_eval_c_005furl_005f15 = _jspx_th_c_005furl_005f15.doStartTag();
      if (_jspx_th_c_005furl_005f15.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f15);
      _jspx_th_c_005furl_005f15_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f15, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f15_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f16(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f16 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f16_reused = false;
    try {
      _jspx_th_c_005furl_005f16.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f16.setParent(null);
      // /WEB-INF/views/snsBoard/snsList.jsp(508,31) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f16.setValue("/snsBoard/display?fileLoca=' + data.fileloca + '&fileName=' + data.filename + '");
      int _jspx_eval_c_005furl_005f16 = _jspx_th_c_005furl_005f16.doStartTag();
      if (_jspx_th_c_005furl_005f16.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f16);
      _jspx_th_c_005furl_005f16_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f16, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f16_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f17(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f17 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f17_reused = false;
    try {
      _jspx_th_c_005furl_005f17.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f17.setParent(null);
      // /WEB-INF/views/snsBoard/snsList.jsp(535,21) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f17.setValue("/snsBoard/delete");
      int _jspx_eval_c_005furl_005f17 = _jspx_th_c_005furl_005f17.doStartTag();
      if (_jspx_th_c_005furl_005f17.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f17);
      _jspx_th_c_005furl_005f17_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f17, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f17_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f18(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f18 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f18_reused = false;
    try {
      _jspx_th_c_005furl_005f18.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f18.setParent(null);
      // /WEB-INF/views/snsBoard/snsList.jsp(591,21) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f18.setValue("/snsBoard/like");
      int _jspx_eval_c_005furl_005f18 = _jspx_th_c_005furl_005f18.doStartTag();
      if (_jspx_th_c_005furl_005f18.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f18);
      _jspx_th_c_005furl_005f18_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f18, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f18_reused);
    }
    return false;
  }
}
