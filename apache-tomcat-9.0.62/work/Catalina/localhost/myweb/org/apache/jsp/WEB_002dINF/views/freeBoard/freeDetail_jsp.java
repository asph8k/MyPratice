/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.62
 * Generated at: 2022-06-24 05:19:20 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.freeBoard;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class freeDetail_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("/WEB-INF/views/freeBoard/../include/header.jsp", Long.valueOf(1655963290674L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1648080476018L));
    _jspx_dependants.put("/WEB-INF/views/freeBoard/../include/footer.jsp", Long.valueOf(1655450702000L));
    _jspx_dependants.put("jar:file:/C:/Users/User/Desktop/java_web_RKP/apache-tomcat-9.0.62/wtpwebapps/MyWeb/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fchoose;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fotherwise;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fchoose = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fotherwise = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fchoose.release();
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fotherwise.release();
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("\r\n");
      out.write("    <meta charset=\"utf-8\">\r\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("    <title>인덱스를 만들어 보자</title>\r\n");
      out.write("	\r\n");
      out.write("	");
      out.write("\r\n");
      out.write("    <link href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/bootstrap.css\" rel=\"stylesheet\">\r\n");
      out.write("    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.11.2/jquery.min.js\"></script>\r\n");
      out.write("    <!--개인 디자인 추가-->\r\n");
      out.write("    <link href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/style.css\" rel=\"stylesheet\">\r\n");
      out.write("    <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/js/bootstrap.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<header>\r\n");
      out.write("        <div class=\"container-fluid\">\r\n");
      out.write("            <div class=\"row\">\r\n");
      out.write("                <div class=\"container\">\r\n");
      out.write("                    <div class=\"navbar\">\r\n");
      out.write("                        <div class=\"navbar-header\">\r\n");
      out.write("                            <!--data-toggle 같은 것들은 내부적으로 지원하는 반응형 API기능이므로 지우면 안됩니다-->\r\n");
      out.write("                            <button type=\"button\" class=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\"#myNavbar\">\r\n");
      out.write("                                <span class=\"icon-bar\"></span>\r\n");
      out.write("                                <span class=\"icon-bar\"></span>\r\n");
      out.write("                                <span class=\"icon-bar\"></span>\r\n");
      out.write("                            </button>\r\n");
      out.write("                            <a class=\"navbar-brand\" href=\"#\"><img width=\"30\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/img/logo.svg\" alt=\"Brand\"></a>\r\n");
      out.write("                        </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("                        <div class=\"collapse navbar-collapse\" id=\"myNavbar\">\r\n");
      out.write("                            <ul class=\"nav navbar-nav\">\r\n");
      out.write("                                <li class=\"active\"><a href=\"");
      if (_jspx_meth_c_005furl_005f0(_jspx_page_context))
        return;
      out.write("\">Main</a></li>\r\n");
      out.write("                                <li><a href=\"");
      if (_jspx_meth_c_005furl_005f1(_jspx_page_context))
        return;
      out.write("\">자유게시판</a></li>\r\n");
      out.write("                                <!-- \r\n");
      out.write("				<li><a href=\"#\">강의</a></li>\r\n");
      out.write("                                <li><a href=\"#\">Form</a></li>\r\n");
      out.write("                                <li><a href=\"#\">Board</a></li>\r\n");
      out.write(" 				-->\r\n");
      out.write("\r\n");
      out.write("                            </ul>\r\n");
      out.write("                            <ul class=\"nav navbar-nav navbar-right\">\r\n");
      out.write("                                <li class=\"dropdown\">\r\n");
      out.write("                                    <a class=\"dropdown-toggle\" data-toggle=\"dropdown\" href=\"#\">로그인\r\n");
      out.write("                                        <span class=\"caret\"></span></a>\r\n");
      out.write("                                    <ul class=\"dropdown-menu\">\r\n");
      out.write("                                    	");
      if (_jspx_meth_c_005fchoose_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("                                    </ul>\r\n");
      out.write("                                </li>\r\n");
      out.write("                            </ul>\r\n");
      out.write("\r\n");
      out.write("                            <form class=\"navbar-form navbar-right\" action=\"\">\r\n");
      out.write("                                <div class=\"input-group\">\r\n");
      out.write("                                    <input type=\"text\" class=\"form-control\" placeholder=\"Search\">\r\n");
      out.write("                                    <div class=\"input-group-btn\">\r\n");
      out.write("\r\n");
      out.write("                                        <button class=\"btn btn-primary\" type=\"submit\">\r\n");
      out.write("                                           	 검색\r\n");
      out.write("                                        </button>\r\n");
      out.write("                                    </div>\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </form>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </header>");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <section>\r\n");
      out.write("        <div class=\"container\">\r\n");
      out.write("            <div class=\"row\">\r\n");
      out.write("                <div class=\"col-xs-12 col-md-9 write-wrap\">\r\n");
      out.write("                        <div class=\"titlebox\">\r\n");
      out.write("                            <p>상세보기</p>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        \r\n");
      out.write("                        <form>\r\n");
      out.write("                            <div>\r\n");
      out.write("                                <label>DATE</label>\r\n");
      out.write("                                ");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("                                ");
      if (_jspx_meth_c_005fif_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("                            </div>   \r\n");
      out.write("                            <div class=\"form-group\">\r\n");
      out.write("                                <label>번호</label>\r\n");
      out.write("                                <input class=\"form-control\" name='##' value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${article.bno}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" readonly>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <div class=\"form-group\">\r\n");
      out.write("                                <label>작성자</label>\r\n");
      out.write("                                <input class=\"form-control\" name='##' value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${article.writer}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" readonly>\r\n");
      out.write("                            </div>    \r\n");
      out.write("                            <div class=\"form-group\">\r\n");
      out.write("                                <label>제목</label>\r\n");
      out.write("                                <input class=\"form-control\" name='##' value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${article.title}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" readonly>\r\n");
      out.write("                            </div>\r\n");
      out.write("\r\n");
      out.write("                            <div class=\"form-group\">\r\n");
      out.write("                                <label>내용</label>\r\n");
      out.write("                                <textarea class=\"form-control\" rows=\"10\" name='##' readonly>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${article.content}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</textarea>\r\n");
      out.write("                            </div>\r\n");
      out.write("\r\n");
      out.write("                            <button type=\"button\" class=\"btn btn-primary\" onclick=\"location.href='");
      if (_jspx_meth_c_005furl_005f6(_jspx_page_context))
        return;
      out.write("'\">변경</button>\r\n");
      out.write("                            <button type=\"button\" class=\"btn btn-dark\" onclick=\"location.href='");
      if (_jspx_meth_c_005furl_005f7(_jspx_page_context))
        return;
      out.write("\"'>목록</button>\r\n");
      out.write("                            \r\n");
      out.write("                    </form>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        </section>\r\n");
      out.write("        \r\n");
      out.write("        <section style=\"margin-top: 80px;\">\r\n");
      out.write("            <div class=\"container\">\r\n");
      out.write("                <div class=\"row\">\r\n");
      out.write("                    <div class=\"col-xs-12 col-md-9 write-wrap\">\r\n");
      out.write("                        <form class=\"reply-wrap\">\r\n");
      out.write("                            <div class=\"reply-image\">\r\n");
      out.write("                                <img src=\"");
      if (_jspx_meth_c_005furl_005f8(_jspx_page_context))
        return;
      out.write("\">\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <!--form-control은 부트스트랩의 클래스입니다-->\r\n");
      out.write("	                    <div class=\"reply-content\">\r\n");
      out.write("	                        <textarea class=\"form-control\" rows=\"3\" id=\"reply\"></textarea>\r\n");
      out.write("	                        <div class=\"reply-group\">\r\n");
      out.write("	                              <div class=\"reply-input\">\r\n");
      out.write("	                              <input type=\"text\" class=\"form-control\" id=\"replyId\" placeholder=\"이름\">\r\n");
      out.write("	                              <input type=\"password\" class=\"form-control\" id=\"replyPw\" placeholder=\"비밀번호\">\r\n");
      out.write("	                              </div>\r\n");
      out.write("	                              \r\n");
      out.write("	                              <button type=\"button\" class=\"right btn btn-info\" id=\"replyRegist\">등록하기</button>\r\n");
      out.write("	                        </div>\r\n");
      out.write("	\r\n");
      out.write("	                    </div>\r\n");
      out.write("                        </form>\r\n");
      out.write("\r\n");
      out.write("                        <!--여기에접근 반복-->\r\n");
      out.write("                        <div id=\"replyList\">\r\n");
      out.write("                        \r\n");
      out.write("                        <!-- 자바 스크립트 단에서 반복문을 이용해서 댓글의 개수만큼 반복 표현.\r\n");
      out.write("                        <div class='reply-wrap'>\r\n");
      out.write("                            <div class='reply-image'>\r\n");
      out.write("                                <img src='../resources/img/profile.png'>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <div class='reply-content'>\r\n");
      out.write("                                <div class='reply-group'>\r\n");
      out.write("                                    <strong class='left'>honggildong</strong> \r\n");
      out.write("                                    <small class='left'>2019/12/10</small>\r\n");
      out.write("                                    <a href='#' class='right'><span class='glyphicon glyphicon-pencil'></span>수정</a>\r\n");
      out.write("                                    <a href='#' class='right'><span class='glyphicon glyphicon-remove'></span>삭제</a>\r\n");
      out.write("                                </div>\r\n");
      out.write("                                <p class='clearfix'>여기는 댓글영역</p>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div> -->\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <button class=\"form-control\" id=\"moreList\">더보기(페이징)</button>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </section>\r\n");
      out.write("        \r\n");
      out.write("	<!-- 모달 -->\r\n");
      out.write("	<div class=\"modal fade\" id=\"replyModal\" role=\"dialog\">\r\n");
      out.write("		<div class=\"modal-dialog modal-md\">\r\n");
      out.write("			<div class=\"modal-content\">\r\n");
      out.write("				<div class=\"modal-header\">\r\n");
      out.write("					<button type=\"button\" class=\"btn btn-default pull-right\" data-dismiss=\"modal\">닫기</button>\r\n");
      out.write("					<h4 class=\"modal-title\">댓글수정</h4>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"modal-body\">\r\n");
      out.write("					<!-- 수정폼 id값을 확인하세요-->\r\n");
      out.write("					<div class=\"reply-content\">\r\n");
      out.write("					<textarea class=\"form-control\" rows=\"4\" id=\"modalReply\" placeholder=\"내용입력\"></textarea>\r\n");
      out.write("					<div class=\"reply-group\">\r\n");
      out.write("						<div class=\"reply-input\">\r\n");
      out.write("						    <input type=\"hidden\" id=\"modalRno\">\r\n");
      out.write("							<input type=\"password\" class=\"form-control\" placeholder=\"비밀번호\" id=\"modalPw\">\r\n");
      out.write("						</div>\r\n");
      out.write("						<button class=\"right btn btn-info\" id=\"modalModBtn\">수정하기</button>\r\n");
      out.write("						<button class=\"right btn btn-info\" id=\"modalDelBtn\">삭제하기</button>\r\n");
      out.write("					</div>\r\n");
      out.write("					</div>\r\n");
      out.write("					<!-- 수정폼끝 -->\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("	\r\n");
      out.write("\r\n");
      out.write("    <footer>\r\n");
      out.write("        <div class=\"container\">\r\n");
      out.write("            <div class=\"row\">\r\n");
      out.write("                <div class=\"col-md-7 col-sm-12\">\r\n");
      out.write("                    <div class=\"copyright\">\r\n");
      out.write("                        <a href=\"\">\r\n");
      out.write("                            <img width=\"20\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/img/logo.svg\" alt=\"Brand\">\r\n");
      out.write("                        </a>\r\n");
      out.write("                        Bootstrap | 대표자 : 홍길동 | E-MAIL : info&#64;info.com<br>\r\n");
      out.write("                        사업자번호 : 123-56-78910 | 개인정보보호책임자 : 홍길동 | 통신판매업 : 2019-서울강남-0001<br>\r\n");
      out.write("                        주소 : 서울시 강남구\r\n");
      out.write("                        <address>&copy;Bootstrap. ALL RIGHTS RESERVED</address>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"col-md-5 col-sm-12 text-right\">\r\n");
      out.write("                    <ul class=\"footer-menu\">\r\n");
      out.write("                        <li><a href=\"#\">고객센터</a></li>\r\n");
      out.write("                        <li><a href=\"#\">이용약관</a></li>\r\n");
      out.write("                        <li><a href=\"#\">개인정보취급방침</a></li>\r\n");
      out.write("                    </ul>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </footer>\r\n");
      out.write("    <!-- //footer -->");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script>\n");
      out.write("	const msg = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${msg}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\r\n");
      out.write("	if(msg !== '') {\r\n");
      out.write("		alert(msg);\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	$(document).ready(function() {\r\n");
      out.write("		$('#replyRegist').click(function() {\r\n");
      out.write("			\r\n");
      out.write("			/*\r\n");
      out.write("	         댓글을 등록하려면 게시글 번호도 보내 주셔야 합니다.\r\n");
      out.write("	         댓글 내용, 작성자, 댓글 비밀번호, 게시글 번호를 \r\n");
      out.write("	         json 표기 방법으로 하나로 모아서 전달해 주시면 됩니다.\r\n");
      out.write("	         비동기 통신으로 댓글 삽입을 처리해 주시고,\r\n");
      out.write("	         console.log를 통해 '댓글 등록 완료!'를 확인하시고\r\n");
      out.write("	         실제 DB에 댓글이 추가되는지도 확인해 주세요.\r\n");
      out.write("	         전송방식: POST, url: /reply/replyRegist\r\n");
      out.write("	         */\r\n");
      out.write("	        const bno = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${article.bno}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'; //컨트롤러에서 넘어온 게시글 번호\r\n");
      out.write("	        const id = $('#replyId').val(); //작성자\r\n");
      out.write("			const pw = $('#replyPw').val(); //비밀번호\r\n");
      out.write("			const content = $('#reply').val(); //댓글 내용\r\n");
      out.write("			\r\n");
      out.write("			if(content === ''|| id === ''|| pw === '') {\r\n");
      out.write("				alert('이름, 비밀번호, 내용을 입력하세요!');\r\n");
      out.write("				return; //이벤트 강제 종료\r\n");
      out.write("			}\r\n");
      out.write("			/*//객체를 따로 만들어서 data에 전달\r\n");
      out.write("			const user = {\r\n");
      out.write("					'bno': bno,\r\n");
      out.write("					'replyId': id,\r\n");
      out.write("					'replyPw': pw,\r\n");
      out.write("					'reply': content\r\n");
      out.write("			};\r\n");
      out.write("			*/\r\n");
      out.write("			$.ajax ({\r\n");
      out.write("				type: 'post',\r\n");
      out.write("				url: '");
      if (_jspx_meth_c_005furl_005f9(_jspx_page_context))
        return;
      out.write("',\r\n");
      out.write("				data: JSON.stringify( //이렇게 직접 객체를 만드는 것도 가능하다. 미리 만들어서 전달하는 거랑 같다.\r\n");
      out.write("					{\r\n");
      out.write("						\"bno\": bno,\r\n");
      out.write("						\"reply\": content,\r\n");
      out.write("						\"replyId\": id,\r\n");
      out.write("						\"replyPw\": pw\r\n");
      out.write("					}		\r\n");
      out.write("				),\r\n");
      out.write("				dataType: 'text', //서버로부터 어떤 형식으로 받을지(text는 생략 가능)\r\n");
      out.write("				contentType: 'application/json', //전송 타입\r\n");
      out.write("				success: function(data) {\r\n");
      out.write("					console.log('통신 성공!' + data);\r\n");
      out.write("					$('#reply').val('');\r\n");
      out.write("					$('#replyId').val('');\r\n");
      out.write("					$('#replyPw').val('');\r\n");
      out.write("					//등록 완료 후 댓글 목록 함수를 호출해서 비동기식으로 목록 표현.\r\n");
      out.write("					getList(1, true);\r\n");
      out.write("				},\r\n");
      out.write("				error: function() {\r\n");
      out.write("					alert('등록에 실패했습니다. 관리자에게 문의하세요.');\r\n");
      out.write("				}\r\n");
      out.write("			}); //ajax end\r\n");
      out.write("			\r\n");
      out.write("		}); //click function end\r\n");
      out.write("		\r\n");
      out.write("		//더보기 버튼 클릭 처리(클릭 시 전역 변수 page에 +1 한 값을 전달)\r\n");
      out.write("		$('#moreList').click(function() {\r\n");
      out.write("			//왜 false를 주었는가?\r\n");
      out.write("			//더보기이기 때문에 누적해야 하기 때문에\r\n");
      out.write("			//1페이지의 댓글 내용 밑에다가 2페이지를 줘야한다. 1페이지를 없애고 2페이지를 보여주자 는게 아니다.\r\n");
      out.write("			getList(++page, false);\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		//댓글 목록 요청\r\n");
      out.write("		let page = 1; //페이지 번호\r\n");
      out.write("		let strAdd = ''; //화면에 그려넣을 태그를 문자열의 형태로 추가할 변수.\r\n");
      out.write("		\r\n");
      out.write("		getList(1, true); //상세보기 화면에 처음 진입 시 댓글 리스트를 불러옴.\r\n");
      out.write("		\r\n");
      out.write("		//getList의 매개값으로 요청된 페이지 번호와 화면을 리셋할 것인지의 여부를 bool 타입의 reset 이름의 변수로 받겠습니다.\r\n");
      out.write("		//(페이지가 그대로 머물면서 댓글이 밑에 계속 쌓이기 때문에, 상황에 따라서\r\n");
      out.write("		//페이지를 리셋해서 새롭게 가져올 것인지, 누적해서 쌓을 것인지의 여부를 확인)\r\n");
      out.write("		function getList(pageNum, reset) { //댓글 목록을 불러오는 메소드\r\n");
      out.write("			const bno = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${article.bno}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'; //게시글 번호\r\n");
      out.write("			\r\n");
      out.write("			//getJSON 함수를 통해서 JSON 형식의 파일을 읽어올 수 있다.\r\n");
      out.write("			//get방식의 요청을 통해 서버로부터 받은 JSON 데이터를 로드한다.\r\n");
      out.write("			//$.getJSON(url, [서버로 부터 받은DATA], [통신성공여부])\r\n");
      out.write("			$.getJSON(\r\n");
      out.write("				\"");
      if (_jspx_meth_c_005furl_005f10(_jspx_page_context))
        return;
      out.write("\" + bno + '/' + pageNum,\r\n");
      out.write("				function(data) { //서버가 전송한 데이터가 data에게 반환.\r\n");
      out.write("					console.log(data);\r\n");
      out.write("					let total = data.total; //총 댓글 수\r\n");
      out.write("					let replyList = data.list; //댓글 리스트\r\n");
      out.write("					\r\n");
      out.write("					//댓글이 insert, update, delete 작업 후 에는\r\n");
      out.write("					//댓글을 누적하고 있는 strAdd 변수를 초기화를 해서\r\n");
      out.write("					//화면이 리셋된 것처럼 보여줘야 합니다.\r\n");
      out.write("					if(reset === true) {\r\n");
      out.write("						strAdd = '';\r\n");
      out.write("						page = 1;\r\n");
      out.write("					}\r\n");
      out.write("					\r\n");
      out.write("					//페이지 번호 * 데이터 수보다 전체 댓글 개수가 작으면 더보기 버튼을 없애자.\r\n");
      out.write("					console.log('현재 페이지: ' + page);\r\n");
      out.write("					if(total <= page * 5) {\r\n");
      out.write("						$('#moreList').css('display', 'none');\r\n");
      out.write("					} else {\r\n");
      out.write("						$('#moreList').css('display', 'block');\r\n");
      out.write("					}\r\n");
      out.write("					\r\n");
      out.write("					//응답 데이터의 길이가 0같거나 더 작으면 함수를 종료하자.\r\n");
      out.write("					if(replyList.length <= 0) {\r\n");
      out.write("						return; //함수 종료.\r\n");
      out.write("					}\r\n");
      out.write("					\r\n");
      out.write("					for(let i=0; i<replyList.length; i++) {\r\n");
      out.write("						strAdd += \r\n");
      out.write("						`<div class='reply-wrap'>\r\n");
      out.write("                        <div class='reply-image'>\r\n");
      out.write("                            <img src='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/img/profile.png'>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class='reply-content'>\r\n");
      out.write("                            <div class='reply-group'>\r\n");
      out.write("                                <strong class='left'>` + replyList[i].replyId + `</strong> \r\n");
      out.write("                                <small class='left'>` + timeStamp(replyList[i].replyDate) + `</small>\r\n");
      out.write("                                <a href='` + replyList[i].rno + `' class='right replyDelete'><span class='glyphicon glyphicon-remove'></span>삭제</a>\r\n");
      out.write("                                <a href='` + replyList[i].rno + `' class='right replyModify'><span class='glyphicon glyphicon-pencil'></span>수정</a>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <p class='clearfix'>` + replyList[i].reply + `</p>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    	</div>`;\r\n");
      out.write("					} //반복문 종료\r\n");
      out.write("					//replyList라는 div 영역에 문자열 형식으로 모든 댓글을 추가.\r\n");
      out.write("					$('#replyList').html(strAdd);\r\n");
      out.write("				} //function(data) end\r\n");
      out.write("			); //getJSON end\r\n");
      out.write("			\r\n");
      out.write("		} //댓글 목록 요청 메소드 종료\r\n");
      out.write("		\r\n");
      out.write("		//수정, 삭제\r\n");
      out.write("		/*\r\n");
      out.write("		$('.replyModify').click(function(e) {\r\n");
      out.write("			e.preventDefault();\r\n");
      out.write("			console.log('수정 이벤트 발생!');\r\n");
      out.write("		}); 동작(X)\r\n");
      out.write("		\r\n");
      out.write("		ajax함수의 실행이 더 늦게 완료가 되기 때문에, 실제 이벤트 선언이 먼저 실행되게 됩니다.\r\n");
      out.write("		이런 상황에서는 화면에 댓글 관련 창은 아무것도 등록되어 있지 않은 형태이므로,\r\n");
      out.write("		일반 클릭 이벤트가 동작하지 않습니다.\r\n");
      out.write("		이 때는, 이미 존재하는 #replyList에 이벤트를 등록하고, 이벤트를 자식에게 전파시켜\r\n");
      out.write("		사용하는 제이쿼리의 이벤트 위임 함수를 반드시 사용해야 합니다.\r\n");
      out.write("		*/\r\n");
      out.write("		\r\n");
      out.write("		$('#replyList').on('click', 'a', function(e) {\r\n");
      out.write("			e.preventDefault(); //태그의 고유 기능을 중지.\r\n");
      out.write("			//1. a태그가 두개 (수정, 삭제)이므로 버튼부터 확인.\r\n");
      out.write("			//수정, 삭제가 발생하는 댓글 번호가 몇 번인지도 확인.\r\n");
      out.write("			const rno = $(this).attr('href');\r\n");
      out.write("			$('#modalRno').val(rno); //모달 내부에 숨겨진 input 태그에 댓글 번호를 담아서 전송.\r\n");
      out.write("			\r\n");
      out.write("			//2.모달 창 하나를 이용해서 상황에 따라 수정, 삭제 모달을 구분하기 위해 조건문을 작성. (모달 하나로 수정, 삭제 같이 처리. 그러기 위해 디자인 조정)\r\n");
      out.write("			//hasClass()는 클래스 이름에 매가값이 포함되어 있다면 true, 없다면 false.\r\n");
      out.write("			if($(this).hasClass('replyModify')) {\r\n");
      out.write("				//수정 버튼을 눌렀으므로 수정 모달 형식으로 꾸며주겠다.\r\n");
      out.write("				$('.modal-title').html('댓글 수정');\r\n");
      out.write("				$('#modalReply').css('display', 'inline');\r\n");
      out.write("				$('#modalModBtn').css('display', 'inline');\r\n");
      out.write("				$('#modalDelBtn').css('display', 'none'); //수정이므로 삭제버튼은 숨기자.\r\n");
      out.write("				\r\n");
      out.write("				//jQuery를 이용한 모달 창 열기/닫기 ('show'/'hide')\r\n");
      out.write("				//BootStrap에서는 trigger를 통해서 모달을 열고 닫았지만, 지금은 그런게 없기 때문에\r\n");
      out.write("				//제이쿼리를 이용하여 직접 모달을 열고 닫습니다.\r\n");
      out.write("				$('#replyModal').modal('show'); //모달을 열어주는 함수.\r\n");
      out.write("				\r\n");
      out.write("			} else {\r\n");
      out.write("				//삭제버튼을 눌렀으므로 삭제 모달 형식으로 변경\r\n");
      out.write("				$('.modal-title').html('댓글 삭제');\r\n");
      out.write("				$('#modalReply').css('display', 'none');\r\n");
      out.write("				$('#modalModBtn').css('display', 'none');\r\n");
      out.write("				$('#modalDelBtn').css('display', 'inline');\r\n");
      out.write("				$('#replyModal').modal('show');\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("		}); //수정 or 삭제 버튼 클릭 이벤트 처리 끝\r\n");
      out.write("		\r\n");
      out.write("		//수정 처리 함수(수정 모달을 열어서 수정 내용을 작성 후 수정버튼을 클릭했을 때)\r\n");
      out.write("		$('#modalModBtn').click(function() {\r\n");
      out.write("			\r\n");
      out.write("			/*\r\n");
      out.write("	         1. 모달창에 rno값, 수정한 댓글 내용(reply), replyPw값을 얻습니다.\r\n");
      out.write("	         2. ajax함수를 이용해서 post방식으로 reply/update 요청,\r\n");
      out.write("	         필요한 값은 JSON형식으로 처리해서 요청.\r\n");
      out.write("	         3. 서버에서는 요청받을 메서드 선언해서 비밀번호 확인하고, 비밀번호가 맞다면\r\n");
      out.write("	          수정을 진행하세요. 만약 비밀번호가 틀렸다면 \"pwFail\"을 반환해서\r\n");
      out.write("	          '비밀번호가 틀렸습니다.' 경고창을 띄우세요.\r\n");
      out.write("	         4. 업데이트가 진행된 다음에는 modal창의 모든 값을 ''로 처리해서 초기화 시키시고\r\n");
      out.write("	          modal창을 닫으세요.\r\n");
      out.write("	          수정된 댓글 내용이 반영될 수 있도록 댓글 목록을 다시 불러 오세요.\r\n");
      out.write("	         */\r\n");
      out.write("	         \r\n");
      out.write("	         const rno = $('#modalRno').val();\r\n");
      out.write("	         const reply = $('#modalReply').val();\r\n");
      out.write("	         const replyPw = $('#modalPw').val();\r\n");
      out.write("	         \r\n");
      out.write("	         if(reply === ''|| replyPw === '') {\r\n");
      out.write("	        	 alert('내용, 비밀번호를 확인하세요!');\r\n");
      out.write("	        	 return;\r\n");
      out.write("	         }\r\n");
      out.write("	         \r\n");
      out.write("	         $.ajax({\r\n");
      out.write("	        	 type: 'post',\r\n");
      out.write("	        	 url: '");
      if (_jspx_meth_c_005furl_005f11(_jspx_page_context))
        return;
      out.write("',\r\n");
      out.write("	        	 contentType: 'application/json',\r\n");
      out.write("	        	 data: JSON.stringify (\r\n");
      out.write("	        		{\r\n");
      out.write("	        			'rno': rno,\r\n");
      out.write("	        			'reply': reply,\r\n");
      out.write("	        			'replyPw': replyPw\r\n");
      out.write("	        		}\r\n");
      out.write("	        	 ),\r\n");
      out.write("	        	 dataType: 'text',\r\n");
      out.write("	        	 success: function(result) {\r\n");
      out.write("	        		 if(result === 'modSuccess') {\r\n");
      out.write("	        			 alert('정상 수정되었습니다.');\r\n");
      out.write("	        			 $('#modalReply').val('');\r\n");
      out.write("	 					 $('#modalPw').val('');\r\n");
      out.write("	 					 $('#replyModal').modal('hide');\r\n");
      out.write("	 					 getList(1, true);\r\n");
      out.write("	        		 } else {\r\n");
      out.write("	        			 alert('비밀번호를 확인하세요.');\r\n");
      out.write("	        			 $('#modalPw').val('');\r\n");
      out.write("	        			 $('#modalPw').focus();\r\n");
      out.write("	        		 }\r\n");
      out.write("				},\r\n");
      out.write("				error: function() {\r\n");
      out.write("					alert('수정에 실패했습니다. 관리자에게 문의하세요.');\r\n");
      out.write("				}\r\n");
      out.write("	         }); // end ajax (수정)\r\n");
      out.write("			\r\n");
      out.write("		}); //수정 처리 이벤트 끝\r\n");
      out.write("		\r\n");
      out.write("		//삭제 함수\r\n");
      out.write("		$('#modalDelBtn').click(function() {\r\n");
      out.write("			\r\n");
      out.write("			/*\r\n");
      out.write("	         1. 모달창에 rno값, replyPw값을 얻습니다.\r\n");
      out.write("	         2. ajax함수를 이용해서 POST방식으로 /reply/delete 요청\r\n");
      out.write("	          필요한 값은 JSON 형식으로 처리해서 요청\r\n");
      out.write("	         3. 서버에서는 요청을 받아서 비밀번호를 확인하고, 비밀번호가 맞으면\r\n");
      out.write("	          삭제를 진행하시면 됩니다.\r\n");
      out.write("	         4. 만약 비밀번호가 틀렸다면, 문자열을 반환해서 \r\n");
      out.write("	          '비밀번호가 틀렸습니다.' 경고창을 띄우세요.\r\n");
      out.write("	         */\r\n");
      out.write("	        const rno = $('#modalRno').val();\r\n");
      out.write("			const replyPw = $('#modalPw').val();\r\n");
      out.write("			\r\n");
      out.write("			if(replyPw === '') {\r\n");
      out.write("				alert('비밀번호를 입력해주세요.');\r\n");
      out.write("				return;\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				type: 'post',\r\n");
      out.write("				url: '");
      if (_jspx_meth_c_005furl_005f12(_jspx_page_context))
        return;
      out.write("',\r\n");
      out.write("				data: JSON.stringify({\r\n");
      out.write("					'rno': rno,\r\n");
      out.write("					'replyPw': replyPw\r\n");
      out.write("				}),\r\n");
      out.write("				contentType: 'application/json',\r\n");
      out.write("				success: function(data) {\r\n");
      out.write("					if(data === 'deleteSuccess') {\r\n");
      out.write("						alert('삭제가 완료되었습니다.');\r\n");
      out.write("						$('#modalPw').val(''); //비밀번호 초기화\r\n");
      out.write("						$('#replyModal').modal('hide');\r\n");
      out.write("	 					getList(1, true);\r\n");
      out.write("					} else {\r\n");
      out.write("						alert('비밀번호가 틀렸습니다');\r\n");
      out.write("						$('#modalPw').val('');\r\n");
      out.write("	        			$('#modalPw').focus();\r\n");
      out.write("					}\r\n");
      out.write("				},\r\n");
      out.write("				error: function() {\r\n");
      out.write("					alert('삭제 실패했습니다.');\r\n");
      out.write("				}\r\n");
      out.write("			}); //end ajax(삭제)\r\n");
      out.write("			\r\n");
      out.write("		}); //삭제 이벤트 끝\r\n");
      out.write("		\r\n");
      out.write("		//날짜 처리 함수\r\n");
      out.write("		function timeStamp(millis) {\r\n");
      out.write("			const date = new Date(); //현재 날짜\r\n");
      out.write("			//현재 날짜를 밀리초로 변환 - 등록일 밀리초 -> 시간 차\r\n");
      out.write("			const gap = date.getTime() - millis;\r\n");
      out.write("			\r\n");
      out.write("			let time; //리턴할 시간\r\n");
      out.write("			if(gap < 60 * 60 * 24 * 1000) { //1일 미만일 경우\r\n");
      out.write("				if(gap < 60 * 60 * 1000) { //1시간 미만일 경우\r\n");
      out.write("					time = '방금 전';\r\n");
      out.write("				} else {\r\n");
      out.write("					time = parseInt(gap / (1000 * 60 * 60)) + '시간 전';\r\n");
      out.write("				}\r\n");
      out.write("			} else { //1일이상일 경우\r\n");
      out.write("				const today = new Date(milies);\r\n");
      out.write("				const year = today.getFullYear(); //년\r\n");
      out.write("				const month = toady.getMoun //월\r\n");
      out.write("				const day = today.getDate //일\r\n");
      out.write("				\r\n");
      out.write("				time = year + '년' + month + '월' + day + '일';\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			return time;\r\n");
      out.write("		} //timeStamp 메소드 종료\r\n");
      out.write("		\r\n");
      out.write("	}); //end jQuery\r\n");
      out.write("	\n");
      out.write("</script>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005furl_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f0 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f0_reused = false;
    try {
      _jspx_th_c_005furl_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f0.setParent(null);
      // /WEB-INF/views/freeBoard/../include/header.jsp(42,60) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f0.setValue("/");
      int _jspx_eval_c_005furl_005f0 = _jspx_th_c_005furl_005f0.doStartTag();
      if (_jspx_th_c_005furl_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f0);
      _jspx_th_c_005furl_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f0, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f1 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f1_reused = false;
    try {
      _jspx_th_c_005furl_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f1.setParent(null);
      // /WEB-INF/views/freeBoard/../include/header.jsp(43,45) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f1.setValue("/freeBoard/freeList");
      int _jspx_eval_c_005furl_005f1 = _jspx_th_c_005furl_005f1.doStartTag();
      if (_jspx_th_c_005furl_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f1);
      _jspx_th_c_005furl_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f1, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fchoose_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f0 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    boolean _jspx_th_c_005fchoose_005f0_reused = false;
    try {
      _jspx_th_c_005fchoose_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fchoose_005f0.setParent(null);
      int _jspx_eval_c_005fchoose_005f0 = _jspx_th_c_005fchoose_005f0.doStartTag();
      if (_jspx_eval_c_005fchoose_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("                                    		");
          if (_jspx_meth_c_005fwhen_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("	                                        ");
          if (_jspx_meth_c_005fotherwise_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("                                        ");
          int evalDoAfterBody = _jspx_th_c_005fchoose_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fchoose_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f0);
      _jspx_th_c_005fchoose_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fchoose_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f0 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f0_reused = false;
    try {
      _jspx_th_c_005fwhen_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      // /WEB-INF/views/freeBoard/../include/header.jsp(57,38) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${login == null}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f0 = _jspx_th_c_005fwhen_005f0.doStartTag();
      if (_jspx_eval_c_005fwhen_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("		                                        <li><a href=\"");
          if (_jspx_meth_c_005furl_005f2(_jspx_th_c_005fwhen_005f0, _jspx_page_context))
            return true;
          out.write("\"><span class=\"glyphicon glyphicon-user\"></span>Join</a></li>\r\n");
          out.write("		                                        <li><a href=\"");
          if (_jspx_meth_c_005furl_005f3(_jspx_th_c_005fwhen_005f0, _jspx_page_context))
            return true;
          out.write("\"><span class=\"glyphicon glyphicon-log-in\"></span>Login</a></li>\r\n");
          out.write("	                                        ");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f0);
      _jspx_th_c_005fwhen_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f2(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fwhen_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f2 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f2_reused = false;
    try {
      _jspx_th_c_005furl_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fwhen_005f0);
      // /WEB-INF/views/freeBoard/../include/header.jsp(58,55) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f2.setValue("/user/userJoin");
      int _jspx_eval_c_005furl_005f2 = _jspx_th_c_005furl_005f2.doStartTag();
      if (_jspx_th_c_005furl_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f2);
      _jspx_th_c_005furl_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f2, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f3(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fwhen_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f3 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f3_reused = false;
    try {
      _jspx_th_c_005furl_005f3.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f3.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fwhen_005f0);
      // /WEB-INF/views/freeBoard/../include/header.jsp(59,55) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f3.setValue("/user/userLogin");
      int _jspx_eval_c_005furl_005f3 = _jspx_th_c_005furl_005f3.doStartTag();
      if (_jspx_th_c_005furl_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f3);
      _jspx_th_c_005furl_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f3, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f3_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fotherwise_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:otherwise
    org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f0 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
    boolean _jspx_th_c_005fotherwise_005f0_reused = false;
    try {
      _jspx_th_c_005fotherwise_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fotherwise_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      int _jspx_eval_c_005fotherwise_005f0 = _jspx_th_c_005fotherwise_005f0.doStartTag();
      if (_jspx_eval_c_005fotherwise_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("		                                        <li><a href=\"");
          if (_jspx_meth_c_005furl_005f4(_jspx_th_c_005fotherwise_005f0, _jspx_page_context))
            return true;
          out.write("\"><span class=\"glyphicon glyphicon-user\"></span>MyPage</a></li>\r\n");
          out.write("		                                        <li><a href=\"");
          if (_jspx_meth_c_005furl_005f5(_jspx_th_c_005fotherwise_005f0, _jspx_page_context))
            return true;
          out.write("\"><span class=\"glyphicon glyphicon-log-out\"></span>Logout</a></li>\r\n");
          out.write("	                                        ");
          int evalDoAfterBody = _jspx_th_c_005fotherwise_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fotherwise_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f0);
      _jspx_th_c_005fotherwise_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fotherwise_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fotherwise_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f4(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fotherwise_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f4 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f4_reused = false;
    try {
      _jspx_th_c_005furl_005f4.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f4.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fotherwise_005f0);
      // /WEB-INF/views/freeBoard/../include/header.jsp(62,55) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f4.setValue("/user/userMypage");
      int _jspx_eval_c_005furl_005f4 = _jspx_th_c_005furl_005f4.doStartTag();
      if (_jspx_th_c_005furl_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f4);
      _jspx_th_c_005furl_005f4_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f4, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f4_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f5(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fotherwise_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f5 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f5_reused = false;
    try {
      _jspx_th_c_005furl_005f5.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f5.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fotherwise_005f0);
      // /WEB-INF/views/freeBoard/../include/header.jsp(63,55) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f5.setValue("/user/userLogout");
      int _jspx_eval_c_005furl_005f5 = _jspx_th_c_005furl_005f5.doStartTag();
      if (_jspx_th_c_005furl_005f5.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f5);
      _jspx_th_c_005furl_005f5_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f5, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f5_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /WEB-INF/views/freeBoard/freeDetail.jsp(16,32) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${article.updateDate == ''}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("                                	<p>");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${article.regDate}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</p>\r\n");
          out.write("                                ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f1_reused = false;
    try {
      _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f1.setParent(null);
      // /WEB-INF/views/freeBoard/freeDetail.jsp(19,32) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${article.updateDate != ''}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
      if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("                                	<p>");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${article.updateDate}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</p>\r\n");
          out.write("                                ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
      _jspx_th_c_005fif_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f6(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f6 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f6_reused = false;
    try {
      _jspx_th_c_005furl_005f6.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f6.setParent(null);
      // /WEB-INF/views/freeBoard/freeDetail.jsp(41,98) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f6.setValue((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("/freeBoard/freeModify?bno=${article.bno}&writer=${article.writer}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      int _jspx_eval_c_005furl_005f6 = _jspx_th_c_005furl_005f6.doStartTag();
      if (_jspx_th_c_005furl_005f6.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f6);
      _jspx_th_c_005furl_005f6_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f6, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f6_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f7(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f7 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f7_reused = false;
    try {
      _jspx_th_c_005furl_005f7.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f7.setParent(null);
      // /WEB-INF/views/freeBoard/freeDetail.jsp(42,95) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f7.setValue((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("/freeBoard/freeList?pageNum=${p.pageNum}&cpp=${p.cpp}&condition=${p.condition}&keyword=${p.keyword}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      int _jspx_eval_c_005furl_005f7 = _jspx_th_c_005furl_005f7.doStartTag();
      if (_jspx_th_c_005furl_005f7.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f7);
      _jspx_th_c_005furl_005f7_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f7, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f7_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f8(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f8 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f8_reused = false;
    try {
      _jspx_th_c_005furl_005f8.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f8.setParent(null);
      // /WEB-INF/views/freeBoard/freeDetail.jsp(56,42) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f8.setValue("/img/profile.png");
      int _jspx_eval_c_005furl_005f8 = _jspx_th_c_005furl_005f8.doStartTag();
      if (_jspx_th_c_005furl_005f8.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f8);
      _jspx_th_c_005furl_005f8_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f8, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f8_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f9(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f9 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f9_reused = false;
    try {
      _jspx_th_c_005furl_005f9.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f9.setParent(null);
      // /WEB-INF/views/freeBoard/freeDetail.jsp(164,10) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f9.setValue("/reply/replyRegist");
      int _jspx_eval_c_005furl_005f9 = _jspx_th_c_005furl_005f9.doStartTag();
      if (_jspx_th_c_005furl_005f9.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f9);
      _jspx_th_c_005furl_005f9_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f9, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f9_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f10(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f10 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f10_reused = false;
    try {
      _jspx_th_c_005furl_005f10.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f10.setParent(null);
      // /WEB-INF/views/freeBoard/freeDetail.jsp(214,5) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f10.setValue("/reply/getList/");
      int _jspx_eval_c_005furl_005f10 = _jspx_th_c_005furl_005f10.doStartTag();
      if (_jspx_th_c_005furl_005f10.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f10);
      _jspx_th_c_005furl_005f10_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f10, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f10_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f11(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f11 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f11_reused = false;
    try {
      _jspx_th_c_005furl_005f11.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f11.setParent(null);
      // /WEB-INF/views/freeBoard/freeDetail.jsp(337,17) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f11.setValue("/reply/update");
      int _jspx_eval_c_005furl_005f11 = _jspx_th_c_005furl_005f11.doStartTag();
      if (_jspx_th_c_005furl_005f11.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f11);
      _jspx_th_c_005furl_005f11_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f11, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f11_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f12(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f12 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f12_reused = false;
    try {
      _jspx_th_c_005furl_005f12.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f12.setParent(null);
      // /WEB-INF/views/freeBoard/freeDetail.jsp(389,10) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f12.setValue("/reply/delete");
      int _jspx_eval_c_005furl_005f12 = _jspx_th_c_005furl_005f12.doStartTag();
      if (_jspx_th_c_005furl_005f12.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f12);
      _jspx_th_c_005furl_005f12_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f12, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f12_reused);
    }
    return false;
  }
}
